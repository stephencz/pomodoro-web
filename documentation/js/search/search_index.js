var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.499,1,0.718]],["body/components/AppComponent.html",[0,0.881,1,1.323,2,1.902,3,0.658,4,0.534,5,1.816,6,1.816,7,1.816,8,1.816,9,0.534,10,2.619,11,1.816,12,2.654,13,2.063,14,2.24,15,2.24,16,4.438,17,2.24,18,4.092,19,0.534,20,1.379,21,4.438,22,0.658,23,0.063,24,1.542,25,1.542,26,1.313,27,2.664,28,3.231,29,0.795,30,3.317,31,0.658,32,0.658,33,0.947,34,0.217,35,1.313,36,2.24,37,1.902,38,1.816,39,1.323,40,1.816,41,0.981,42,1.816,43,0.947,44,0.659,45,1.816,46,0.947,47,1.816,48,0.534,49,0.947,50,1.816,51,1.816,52,0.041,53,0.05,54,0.041]],["title/modules/AppModule.html",[55,1.638,56,1.377]],["body/modules/AppModule.html",[1,1.443,3,0.631,4,0.512,9,0.512,23,0.064,31,0.966,32,0.631,33,0.908,34,0.208,35,1.259,43,1.37,44,0.642,46,1.37,48,0.772,52,0.039,53,0.049,54,0.039,55,2.07,56,2.779,57,2.07,58,1.741,59,3.438,60,2.835,61,3.147,62,2.511,63,2.511,64,2.511,65,2.511,66,3.147,67,1.741,68,2.07,69,3.18,70,3.986,71,2.511,72,1.741,73,3.986,74,3.18,75,2.511,76,3.18,77,3.18,78,1.259,79,1.741,80,2.07,81,3.18,82,3.18]],["title/classes/AppPage.html",[34,0.165,83,1.638]],["body/classes/AppPage.html",[3,0.725,4,0.588,9,0.588,14,1.999,19,0.588,23,0.063,29,1.04,31,0.725,33,1.043,34,0.239,37,1.697,52,0.045,53,0.053,54,0.045,72,1.999,83,2.824,84,1.999,85,2.883,86,1.462,87,4.787,88,4.787,89,3.651,90,1.462,91,3.651,92,2.883,93,2.016,94,3.651,95,4.337,96,3.651,97,3.651]],["title/classes/Timer.html",[34,0.165,44,0.405]],["body/classes/Timer.html",[3,0.215,4,0.174,9,0.289,14,0.592,19,0.174,20,0.606,22,0.78,23,0.065,25,0.836,26,1.517,29,1.069,31,0.458,32,0.215,33,0.513,34,0.176,39,0.92,41,0.645,44,0.819,48,0.55,49,0.659,52,0.013,53,0.022,54,0.013,67,0.592,78,0.428,79,0.592,84,0.592,86,0.606,90,1.405,93,2.132,98,0.704,99,0.778,100,0.836,101,0.984,102,0.984,103,1.42,104,1.959,105,2.311,106,2.249,107,1.42,108,1.503,109,1.42,110,3.025,111,0.984,112,1.42,113,3.175,114,2.124,115,1.751,116,2.545,117,1.42,118,2.754,119,2.33,120,3.46,121,2.124,122,2.698,123,2.422,124,1.823,125,1.498,126,1.765,127,1.264,128,1.264,129,2.33,130,2.301,131,2.124,132,2.124,133,2.124,134,2.124,135,2.124,136,2.124,137,2.124,138,1.798,139,1.798,140,2.124,141,2.124,142,1.798,143,0.606,144,1.42,145,2.287,146,1.798,147,1.264,148,1.183,149,1.183,150,1.065,151,1.065,152,1.081,153,2.713,154,2.545,155,1.42,156,2.545,157,1.081,158,1.081,159,1.42,160,1.42,161,0.984,162,1.081,163,0.984,164,1.697,165,1.388,166,1.081,167,0.984,168,1.905,169,1.081,170,1.081,171,1.081,172,1.473,173,1.42,174,1.944,175,1.081,176,1.081,177,2.124,178,2.358,179,1.081,180,1.081,181,1.081,182,1.42,183,1.081,184,2.034,185,1.42,186,1.171,187,1.171,188,1.183,189,1.42,190,1.081,191,1.42,192,1.081,193,2.124,194,2.825,195,1.081,196,1.42,197,1.081,198,0.606,199,2.698,200,0.704,201,1.823,202,1.823,203,1.823,204,2.124,205,2.124,206,1.828,207,1.073,208,0.704,209,1.171,210,0.854,211,1.42,212,0.854,213,1.42,214,2.124,215,0.854,216,0.854,217,1.823,218,0.854,219,0.854,220,0.854,221,0.854,222,0.854,223,1.42,224,1.823,225,1.42,226,0.854,227,1.42,228,1.42,229,1.823,230,1.823,231,0.854,232,0.854,233,0.854,234,0.854,235,0.854,236,1.42,237,1.42,238,0.854,239,0.854,240,0.854,241,2.825,242,0.854,243,1.42,244,0.854,245,1.944,246,0.854,247,0.854,248,1.823,249,0.592,250,0.854,251,0.854,252,0.854,253,0.854,254,0.854,255,0.704,256,0.854,257,0.854,258,0.364,259,0.704,260,0.854,261,0.854,262,0.854,263,0.854,264,0.854,265,0.854,266,0.854,267,0.854,268,0.854,269,0.854,270,1.42,271,0.854,272,0.592,273,0.854,274,0.854,275,0.854,276,0.854,277,0.984,278,0.854,279,0.854,280,0.854,281,1.42,282,0.854,283,0.854,284,0.854,285,0.854,286,0.854,287,0.704,288,0.984,289,1.42,290,0.704,291,0.854,292,0.854,293,0.854,294,0.854,295,0.854,296,0.854,297,0.854,298,0.854,299,0.854,300,0.854,301,0.854,302,0.854,303,0.854,304,0.854,305,1.42,306,0.854]],["title/components/TimerButtonComponent.html",[0,0.499,43,0.718]],["body/components/TimerButtonComponent.html",[0,0.903,1,0.817,2,1.732,3,0.568,4,0.461,5,1.567,6,1.567,7,1.567,8,1.567,9,0.461,11,1.567,12,2.555,13,1.33,15,2.04,17,2.04,19,0.461,22,0.568,23,0.064,24,1.732,29,0.893,31,0.568,32,0.568,33,0.817,34,0.272,35,1.133,36,2.04,37,1.732,38,1.567,39,1.253,40,1.567,41,0.893,42,1.567,43,1.253,44,0.784,45,1.567,46,0.817,47,1.567,48,0.461,49,1.064,50,1.567,51,1.567,52,0.035,53,0.046,54,0.035,80,2.698,99,0.964,143,1.397,307,1.926,308,2.259,309,3.726,310,3.726,311,4.667,312,4.144,313,3.726,314,3.726,315,4.552,316,3.726,317,3.272,318,3.726,319,1.863,320,2.942,321,1.863,322,1.863,323,2.942,324,2.259,325,2.861,326,2.861,327,2.861,328,2.259,329,2.259,330,2.861,331,2.861,332,2.942,333,2.259,334,4.144,335,2.861,336,2.861,337,3.726,338,2.861,339,2.259,340,2.861,341,2.861,342,2.861,343,2.861,344,3.726,345,2.942,346,2.259,347,2.861,348,2.861]],["title/components/TimerComponent.html",[0,0.499,46,0.718]],["body/components/TimerComponent.html",[0,0.839,1,0.659,2,1.498,3,0.458,4,0.371,5,1.263,6,1.263,7,1.263,8,1.263,9,0.371,11,1.263,12,2.398,13,1.072,15,1.764,17,1.764,19,0.371,20,1.086,22,0.639,23,0.064,27,2.616,29,1.099,31,0.737,32,0.458,33,0.659,34,0.243,35,0.913,36,1.764,37,1.498,38,1.263,39,1.147,40,1.263,41,0.89,42,1.263,43,0.659,44,0.813,45,1.263,46,1.31,47,1.263,48,0.705,49,0.92,50,1.263,51,1.263,52,0.028,53,0.04,54,0.028,78,0.913,79,1.263,86,1.086,90,1.477,99,0.777,100,1.498,125,1.498,129,2.616,143,0.777,149,1.276,150,0.913,151,0.913,164,1.735,172,1.764,184,2.398,186,2.097,188,1.735,207,2.036,209,2.616,255,2.097,258,1.425,290,2.097,319,2.417,321,1.502,322,1.502,332,1.821,333,1.821,349,1.821,350,3.222,351,3.222,352,3.222,353,3.222,354,3.222,355,3.222,356,3.222,357,3.222,358,3.713,359,3.222,360,4.019,361,4.019,362,4.019,363,4.019,364,2.306,365,3.222,366,2.306,367,2.306,368,3.222,369,4.019,370,3.713,371,2.306,372,3.222,373,3.222,374,2.306,375,3.222,376,3.222,377,2.306,378,2.306,379,2.306,380,3.222,381,3.222,382,3.222,383,2.306,384,2.306,385,2.306,386,2.306,387,1.821,388,3.222,389,4.019,390,2.306,391,2.306,392,3.713,393,2.306,394,2.306]],["title/classes/TimerDisplay.html",[34,0.165,258,0.848]],["body/classes/TimerDisplay.html",[3,0.378,4,0.307,9,0.307,19,0.307,20,0.947,22,0.883,23,0.064,24,0.885,25,1.305,26,1.626,29,1.113,31,0.557,32,0.378,34,0.219,39,0.544,41,0.882,44,0.804,49,1.37,52,0.023,53,0.035,54,0.023,84,1.043,86,0.947,90,1.384,93,2.068,99,1.323,100,1.305,101,1.537,102,1.537,104,1.537,105,1.55,106,2.309,123,2.477,125,1.909,126,2.248,127,1.826,128,1.826,130,2.256,143,0.642,145,2.394,147,1.537,148,1.112,149,1.112,150,1.458,151,1.458,161,1.537,163,1.537,164,1.955,165,1.711,167,1.537,168,2.267,188,1.321,198,0.642,206,1.711,249,2.015,258,1.469,277,1.043,288,1.043,307,2.18,395,1.24,396,1.828,397,2.906,398,2.906,399,2.906,400,2.808,401,2.808,402,2.808,403,2.217,404,2.808,405,1.905,406,1.905,407,1.905,408,1.905,409,1.905,410,1.905,411,1.905,412,2.217,413,1.905,414,1.905,415,1.905,416,1.905,417,1.905,418,1.504,419,1.504,420,1.504,421,1.504,422,1.504,423,2.217,424,2.217,425,1.504,426,2.906,427,1.504,428,2.217,429,1.504,430,1.504,431,1.504,432,1.504,433,1.24,434,1.504,435,1.504,436,1.504,437,1.504,438,1.504,439,1.504]],["title/components/TimerDisplayComponent.html",[0,0.499,48,0.405]],["body/components/TimerDisplayComponent.html",[0,0.764,1,0.705,2,1.57,3,0.49,4,0.398,5,1.353,6,1.353,7,1.353,8,1.353,9,0.398,11,1.353,12,2.45,13,1.148,15,1.85,17,1.85,19,0.398,20,1.139,22,0.764,23,0.064,24,1.924,29,0.923,31,0.67,32,0.49,33,0.705,34,0.162,35,0.978,36,1.85,37,1.57,38,1.353,39,1.182,40,1.353,41,0.992,42,1.353,43,0.705,44,0.784,45,1.353,46,0.705,47,1.353,48,0.72,49,1.427,50,1.353,51,1.353,52,0.03,53,0.042,54,0.03,78,1.639,86,1.139,90,0.833,99,1.139,105,2.08,106,2.245,130,1.79,143,0.833,145,2.304,150,1.338,151,1.338,164,1.913,168,2.168,188,0.978,206,1.79,245,2.199,259,2.913,272,1.85,287,2.199,307,1.924,317,3.04,319,1.608,320,1.951,321,1.608,322,1.608,323,1.951,324,1.951,328,1.951,329,1.951,339,1.951,345,2.667,346,1.951,387,1.951,440,1.951,441,3.378,442,3.378,443,3.85,444,3.378,445,3.378,446,2.47,447,2.45,448,3.378,449,3.378,450,2.47,451,3.378,452,2.47,453,2.47,454,2.47,455,2.47,456,3.378,457,3.378,458,2.47,459,2.47,460,2.47]],["title/injectables/TimerDisplayService.html",[198,0.848,447,1.377]],["body/injectables/TimerDisplayService.html",[3,0.423,4,0.343,9,0.343,19,0.343,20,1.027,22,0.605,23,0.064,24,1.908,26,1.207,29,1.054,31,0.605,32,0.423,34,0.233,39,0.609,41,0.511,44,0.794,48,0.343,49,1.407,52,0.026,53,0.037,54,0.026,86,1.027,90,1.384,93,2.127,99,1.027,100,1.416,101,1.167,102,1.167,104,1.167,105,1.985,106,2.291,108,1.388,123,2.598,125,1.416,126,1.668,127,1.167,128,1.167,130,2.158,143,1.027,145,2.347,147,1.668,148,1.207,149,1.408,150,0.844,151,0.844,161,1.167,163,1.167,164,1.933,165,1.653,167,1.167,168,2.242,184,1.167,188,0.844,198,0.719,206,1.804,208,1.388,249,1.947,258,1.439,272,1.167,277,1.167,288,1.167,307,2.089,395,1.388,396,1.388,397,1.683,398,1.683,399,1.683,403,1.683,412,1.683,418,1.683,419,1.683,420,1.683,421,1.683,422,1.683,423,2.406,424,2.406,425,1.683,426,3.064,427,1.683,428,2.406,429,1.683,430,1.683,431,3.241,432,3.064,433,2.672,434,3.064,435,1.683,436,1.683,437,1.683,438,1.683,439,1.683,447,1.947,461,1.388,462,2.132,463,2.132,464,3.556,465,3.556,466,3.556,467,3.047,468,3.047,469,2.132,470,2.132,471,2.132,472,2.132,473,2.132,474,2.132,475,2.132,476,2.132,477,2.132]],["title/injectables/TimerService.html",[198,0.848,207,1.169]],["body/injectables/TimerService.html",[3,0.216,4,0.175,9,0.373,14,0.595,19,0.175,20,0.609,22,0.799,23,0.065,25,0.505,26,1.186,29,1.051,31,0.46,32,0.216,33,0.515,34,0.152,39,0.923,41,0.892,44,0.817,48,0.706,49,0.77,52,0.013,53,0.022,54,0.013,67,0.988,78,0.43,79,0.595,86,0.609,90,1.407,93,2.134,98,0.707,99,1.209,100,0.505,101,0.595,102,0.595,103,0.858,104,1.477,105,2.275,106,2.245,107,0.858,108,1.508,109,0.858,110,2.365,111,0.595,112,0.858,113,2.552,114,1.426,115,1.175,116,1.829,117,0.858,118,2.423,119,1.757,120,3.03,121,1.426,122,2.552,123,2.377,124,0.858,125,0.839,126,0.988,127,0.595,128,0.595,129,2.334,130,2.309,131,0.858,132,0.858,133,0.858,134,0.858,135,0.858,136,0.858,137,0.858,140,0.858,141,0.858,143,0.781,144,0.858,145,2.33,147,1.268,148,1.28,149,1.356,150,1.474,151,1.474,153,2.334,154,1.829,155,0.858,156,1.426,159,0.858,160,0.858,161,0.595,163,0.595,164,1.818,165,1.254,167,0.595,168,2.107,172,0.988,173,0.858,174,1.508,177,1.426,178,2.365,182,0.858,184,2.156,185,0.858,186,0.707,187,0.707,188,1.42,189,0.858,191,0.858,193,1.426,194,2.552,196,0.858,198,0.609,199,2.938,200,0.707,201,1.829,202,1.829,203,1.829,204,2.131,205,2.131,206,1.831,207,1.502,208,1.175,209,1.95,210,0.858,211,1.829,212,1.829,213,2.131,214,2.704,215,1.426,216,1.829,217,2.365,218,1.426,219,1.829,220,1.426,221,0.858,222,0.858,223,1.426,224,1.829,225,1.426,226,1.426,227,1.426,228,1.426,229,1.829,230,1.829,231,1.426,232,0.858,233,0.858,234,1.426,235,1.426,236,2.131,237,2.131,238,1.426,239,2.131,240,0.858,241,2.831,242,2.131,243,1.426,244,2.131,245,2.23,246,1.426,247,1.426,248,2.131,249,0.988,250,1.426,251,0.858,252,0.858,253,0.858,254,0.858,255,1.175,256,1.426,257,1.426,258,0.781,259,1.175,260,1.426,261,0.858,262,0.858,263,0.858,264,0.858,265,0.858,266,0.858,267,0.858,268,0.858,269,0.858,270,1.426,271,0.858,272,0.595,273,0.858,274,0.858,275,0.858,276,0.858,277,0.988,278,0.858,279,0.858,280,0.858,281,1.426,282,0.858,283,0.858,284,0.858,285,0.858,286,0.858,287,0.707,288,0.988,289,1.426,290,1.175,291,0.858,292,0.858,293,0.858,294,0.858,295,0.858,296,0.858,297,0.858,298,0.858,299,0.858,300,0.858,301,0.858,302,0.858,303,1.426,304,1.426,305,2.552,306,0.858,461,0.707,478,1.805,479,1.805,480,1.805,481,1.805,482,1.805,483,1.805,484,1.805,485,1.805,486,1.086,487,1.086,488,1.086,489,1.086,490,1.086,491,1.086,492,1.086,493,1.086,494,1.086,495,1.086,496,1.086,497,1.086,498,1.086,499,1.086,500,1.086,501,1.086,502,1.086,503,1.086]],["title/coverage.html",[504,2.701]],["body/coverage.html",[0,0.922,1,0.954,9,0.538,10,2.638,22,0.663,23,0.063,34,0.292,43,0.954,44,0.538,46,0.954,48,0.538,52,0.041,53,0.051,54,0.041,78,1.323,80,2.175,83,2.175,85,2.638,98,2.676,148,1.323,153,3.025,165,2.257,198,1.386,207,1.553,258,1.126,307,2.16,308,2.638,349,2.638,395,2.676,440,2.638,447,1.829,504,2.638,505,3.342,506,3.342,507,3.342,508,3.342,509,3.342,510,4.111,511,3.342,512,3.342,513,3.342,514,3.342,515,3.342,516,3.342,517,3.342,518,3.342,519,3.342,520,3.342,521,3.342,522,3.342,523,2.638,524,3.246,525,4.646,526,2.638,527,3.246,528,2.638,529,2.638,530,3.342,531,3.342]],["title/dependencies.html",[58,1.655,532,2.108]],["body/dependencies.html",[23,0.064,32,0.728,52,0.045,53,0.053,54,0.045,58,2.007,60,2.387,71,3.433,72,2.38,75,2.895,200,2.387,533,3.666,534,5.053,535,3.666,536,3.666,537,3.666,538,3.666,539,3.666,540,3.666,541,3.666,542,3.666,543,3.666,544,3.666,545,3.666,546,3.666,547,3.666,548,3.666]],["title/index.html",[19,0.339,119,1.372,549,2.108]],["body/index.html",[0,0.882,4,0.536,13,1.547,23,0.05,27,2.167,28,2.629,41,0.798,52,0.041,53,0.05,54,0.041,68,2.167,92,2.629,115,3.102,118,2.67,148,1.318,187,2.167,396,2.167,433,2.167,550,3.329,551,4.102,552,3.329,553,4.445,554,4.445,555,3.329,556,3.329,557,3.329,558,4.102,559,4.917,560,3.329,561,3.329,562,3.329,563,3.329,564,3.329,565,3.329,566,3.329,567,3.329,568,3.329,569,4.445,570,4.445,571,3.329,572,4.765,573,3.329,574,3.329,575,3.329,576,3.329,577,3.329,578,2.629,579,4.102,580,4.64,581,3.329,582,4.102,583,4.102,584,3.329,585,4.64,586,3.329,587,3.329,588,4.445,589,3.329,590,3.329,591,3.329,592,3.329]],["title/modules.html",[57,2.227]],["body/modules.html",[23,0.056,52,0.049,53,0.056,54,0.049,56,2.188,57,2.602,72,2.188,593,3.997,594,3.997,595,3.997]],["title/overview.html",[596,2.701]],["body/overview.html",[1,1.426,2,1.673,23,0.061,35,1.425,43,1.313,46,1.313,48,0.74,52,0.044,53,0.053,54,0.044,55,2.8,56,2.801,58,1.971,59,2.842,60,2.343,61,2.842,62,2.842,63,2.842,64,2.842,65,2.842,66,3.396,67,1.971,68,2.343,84,1.971,461,2.343,596,2.842,597,3.599,598,3.599,599,3.599,600,3.599]],["title/miscellaneous/variables.html",[111,1.655,601,1.664]],["body/miscellaneous/variables.html",[19,0.59,22,0.92,23,0.063,25,2.155,26,1.836,52,0.045,53,0.053,54,0.045,111,2.007,149,1.722,172,2.38,174,2.387,523,2.895,524,3.785,526,2.895,527,2.895,528,3.433,529,3.433,578,3.433,601,2.895,602,4.348,603,3.666,604,3.666,605,3.666,606,3.666]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":165,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["0.9.1",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":341,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["1",{"_index":597,"title":{},"body":{"overview.html":{}}}],["1.15.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":281,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["1000ms",{"_index":278,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["10em",{"_index":460,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["10px",{"_index":343,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["1200",{"_index":293,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["14/19",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["14/21",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":370,"title":{},"body":{"components/TimerComponent.html":{}}}],["2",{"_index":599,"title":{},"body":{"overview.html":{}}}],["2/3",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":334,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["25",{"_index":373,"title":{},"body":{"components/TimerComponent.html":{}}}],["2em",{"_index":325,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["3",{"_index":600,"title":{},"body":{"overview.html":{}}}],["3.4.1",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":339,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["4",{"_index":598,"title":{},"body":{"overview.html":{}}}],["4.3.1",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["4/8",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":376,"title":{},"body":{"components/TimerComponent.html":{}}}],["50",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":331,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["53",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["6.4.0",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":161,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["66",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["7/13",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":327,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["73",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["8.0.1",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":556,"title":{},"body":{"index.html":{}}}],["9",{"_index":436,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["accurately",{"_index":268,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["acts",{"_index":310,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["actual_component",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["add",{"_index":437,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["additionally",{"_index":107,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["alarm",{"_index":214,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["alarminterval",{"_index":216,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["align",{"_index":328,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["amount",{"_index":155,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["angular",{"_index":553,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"index.html":{}}}],["app.component",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app/timer.service",{"_index":418,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":83,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["artifacts",{"_index":573,"title":{},"body":{"index.html":{}}}],["attached",{"_index":382,"title":{},"body":{"components/TimerComponent.html":{}}}],["audio",{"_index":219,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["audio('assets/beep.mp3",{"_index":220,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["automatically",{"_index":564,"title":{},"body":{"index.html":{}}}],["b2a5aa9021244070bbefa6f4fcfce6fd98e99c03",{"_index":592,"title":{},"body":{"index.html":{}}}],["background",{"_index":344,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["beep",{"_index":305,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["beepinmg",{"_index":215,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["black",{"_index":459,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["block",{"_index":322,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["boolean",{"_index":156,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":337,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["bottom",{"_index":335,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["break",{"_index":369,"title":{},"body":{"components/TimerComponent.html":{}}}],["browse",{"_index":595,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":94,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":572,"title":{},"body":{"index.html":{}}}],["button",{"_index":311,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["button'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["button.component",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.css",{"_index":312,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["button.component.html",{"_index":313,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["button.component.ts",{"_index":308,"title":{},"body":{"components/TimerButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:15",{"_index":316,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["button/timer",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"coverage.html":{}}}],["buttons",{"_index":354,"title":{},"body":{"components/TimerComponent.html":{}}}],["buttontext",{"_index":315,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["calculated",{"_index":267,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["center",{"_index":329,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["change",{"_index":187,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["check",{"_index":590,"title":{},"body":{"index.html":{}}}],["class",{"_index":34,"title":{"classes/AppPage.html":{},"classes/Timer.html":{},"classes/TimerDisplay.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["classes",{"_index":84,"title":{},"body":{"classes/AppPage.html":{},"classes/Timer.html":{},"classes/TimerDisplay.html":{},"overview.html":{}}}],["clear",{"_index":499,"title":{},"body":{"injectables/TimerService.html":{}}}],["clearinterval(this.alarminterval",{"_index":302,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["clears",{"_index":301,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["cli",{"_index":554,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":567,"title":{},"body":{"index.html":{}}}],["color",{"_index":345,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["come",{"_index":109,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["compares",{"_index":261,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"overview.html":{}}}],["connected",{"_index":256,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["considered",{"_index":191,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["constructor",{"_index":143,"title":{},"body":{"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["constructor(hours",{"_index":403,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["constructor(private",{"_index":387,"title":{},"body":{"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["constructor(time",{"_index":144,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["constructor(timerdisplayservice",{"_index":446,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["constructor(timerservice",{"_index":364,"title":{},"body":{"components/TimerComponent.html":{}}}],["context",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["converthourstoseconds",{"_index":478,"title":{},"body":{"injectables/TimerService.html":{}}}],["converthourstoseconds(hours",{"_index":247,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["convertminutestoseconds",{"_index":479,"title":{},"body":{"injectables/TimerService.html":{}}}],["convertminutestoseconds(minutes",{"_index":246,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["convience",{"_index":110,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["correct",{"_index":266,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["coverage",{"_index":504,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":271,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["creates",{"_index":147,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["current",{"_index":237,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["date.now",{"_index":194,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["dates",{"_index":262,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":379,"title":{},"body":{"components/TimerComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["dependencies",{"_index":58,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":99,"title":{},"body":{"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["dev",{"_index":561,"title":{},"body":{"index.html":{}}}],["development",{"_index":557,"title":{},"body":{"index.html":{}}}],["digital",{"_index":102,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["directives",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":571,"title":{},"body":{"index.html":{}}}],["directory",{"_index":575,"title":{},"body":{"index.html":{}}}],["display",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["display's",{"_index":451,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.component",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["display.component.css",{"_index":443,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.component.html",{"_index":444,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.component.ts",{"_index":440,"title":{},"body":{"components/TimerDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:16",{"_index":448,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.component.ts:26",{"_index":450,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.service",{"_index":452,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.service.ts",{"_index":395,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:101",{"_index":468,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:11",{"_index":406,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:116",{"_index":476,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:126",{"_index":469,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:134",{"_index":472,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:14",{"_index":407,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:145",{"_index":473,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:163",{"_index":474,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:17",{"_index":405,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:20",{"_index":408,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:23",{"_index":404,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:38",{"_index":409,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:43",{"_index":410,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:48",{"_index":411,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:53",{"_index":413,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:63",{"_index":415,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:76",{"_index":417,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.updatedisplay(hours",{"_index":254,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["display/timer",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/Timer.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["displayed",{"_index":249,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["displays",{"_index":318,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["dist",{"_index":574,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["done",{"_index":160,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["down",{"_index":122,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["duration",{"_index":113,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["dynamic",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":586,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":85,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":91,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":89,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":351,"title":{},"body":{"components/TimerComponent.html":{}}}],["eaeaea",{"_index":348,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["element(by.css('app",{"_index":96,"title":{},"body":{"classes/AppPage.html":{}}}],["end",{"_index":585,"title":{},"body":{"index.html":{}}}],["environment",{"_index":524,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":277,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["execute",{"_index":582,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerService.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["false",{"_index":174,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":346,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["files",{"_index":566,"title":{},"body":{"index.html":{}}}],["flag",{"_index":577,"title":{},"body":{"index.html":{}}}],["font",{"_index":323,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["form",{"_index":477,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["formatted",{"_index":431,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["formsmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["functionality",{"_index":208,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["further",{"_index":587,"title":{},"body":{"index.html":{}}}],["generate",{"_index":569,"title":{},"body":{"index.html":{}}}],["generated",{"_index":552,"title":{},"body":{"index.html":{}}}],["getdisplaystring",{"_index":464,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["getduration",{"_index":131,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["gethours",{"_index":397,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["gethoursontimer",{"_index":244,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["gethoursstring",{"_index":465,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["getisrunning",{"_index":132,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getlast",{"_index":133,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getlastdelta",{"_index":134,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getminutes",{"_index":398,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["getminutesinhour",{"_index":242,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getminutesstring",{"_index":466,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["getseconds",{"_index":399,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["getsecondsinminute",{"_index":239,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getsecondsstring",{"_index":434,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["getstart",{"_index":135,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getstartdelta",{"_index":136,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["gettime",{"_index":137,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getting",{"_index":549,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":87,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":589,"title":{},"body":{"index.html":{}}}],["greater",{"_index":276,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["h1')).gettext",{"_index":97,"title":{},"body":{"classes/AppPage.html":{}}}],["height",{"_index":330,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["help",{"_index":588,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":471,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["holds",{"_index":272,"title":{},"body":{"classes/Timer.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["host",{"_index":321,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["hours",{"_index":168,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["http://localhost:4200",{"_index":563,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["if(!this.timer.getisrunning",{"_index":263,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["if(hours",{"_index":425,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["if(minutes",{"_index":427,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["if(seconds",{"_index":428,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["if(this.timer.getlastdelta",{"_index":280,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["if(this.timer.gettime",{"_index":291,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["implements",{"_index":357,"title":{},"body":{"components/TimerComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["imports",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["initialize",{"_index":265,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["injectable",{"_index":198,"title":{"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["injectables",{"_index":461,"title":{},"body":{"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"overview.html":{}}}],["input",{"_index":320,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["inputs",{"_index":314,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["internal",{"_index":356,"title":{},"body":{"components/TimerComponent.html":{}}}],["interval",{"_index":199,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["isn't",{"_index":117,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["isrunning",{"_index":124,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["itself",{"_index":295,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["jquery",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":584,"title":{},"body":{"index.html":{}}}],["keep",{"_index":103,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["keeping",{"_index":154,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["keeps",{"_index":213,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["last",{"_index":120,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["leading",{"_index":438,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"overview.html":{}}}],["less",{"_index":288,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["long",{"_index":368,"title":{},"body":{"components/TimerComponent.html":{}}}],["margin",{"_index":332,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{}}}],["matching",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor((this.timer.gettime",{"_index":243,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["math.floor(this.timer.getstartdelta",{"_index":282,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["max_clock_value",{"_index":127,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["maximum",{"_index":163,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["methods",{"_index":86,"title":{},"body":{"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["milliseconds",{"_index":177,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["min_clock_value",{"_index":128,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["minimum",{"_index":167,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["minus",{"_index":285,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["minute",{"_index":238,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["minutes",{"_index":164,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["miscellaneous",{"_index":601,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":101,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["module",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":57,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":396,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"index.html":{}}}],["mp3",{"_index":218,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["navigate",{"_index":562,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":88,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":297,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["needed",{"_index":462,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["new",{"_index":148,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":559,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":360,"title":{},"body":{"components/TimerComponent.html":{}}}],["note",{"_index":185,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["number",{"_index":145,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["object",{"_index":149,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":372,"title":{},"body":{"components/TimerComponent.html":{}}}],["oninit",{"_index":319,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["optional",{"_index":151,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["otherwise",{"_index":173,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["out",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":596,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":532,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":342,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["param",{"_index":206,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["parameters",{"_index":150,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["passed",{"_index":245,"title":{},"body":{"classes/Timer.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerService.html":{}}}],["plays",{"_index":303,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["pomodoro",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["pomodoroweb",{"_index":550,"title":{},"body":{"index.html":{}}}],["popper.js",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":123,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["process",{"_index":273,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["prod",{"_index":576,"title":{},"body":{"index.html":{}}}],["production",{"_index":578,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["productivity",{"_index":350,"title":{},"body":{"components/TimerComponent.html":{}}}],["project",{"_index":551,"title":{},"body":{"index.html":{}}}],["promise",{"_index":95,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["protractor",{"_index":92,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":298,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["providedin",{"_index":210,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":108,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["public",{"_index":130,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["purposes",{"_index":439,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["querylist",{"_index":385,"title":{},"body":{"components/TimerComponent.html":{}}}],["radius",{"_index":338,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["reaching",{"_index":296,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["readme",{"_index":591,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":126,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["reference",{"_index":381,"title":{},"body":{"components/TimerComponent.html":{}}}],["reload",{"_index":565,"title":{},"body":{"index.html":{}}}],["remaining",{"_index":236,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["represent",{"_index":463,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["representing",{"_index":432,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["represents",{"_index":100,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["require",{"_index":529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"overview.html":{}}}],["responsible",{"_index":355,"title":{},"body":{"components/TimerComponent.html":{}}}],["result",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":93,"title":{},"body":{"classes/AppPage.html":{},"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["returns",{"_index":90,"title":{},"body":{"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["run",{"_index":115,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["running",{"_index":118,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["rxjs",{"_index":200,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":568,"title":{},"body":{"index.html":{}}}],["screen",{"_index":442,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["seconds",{"_index":106,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["serve",{"_index":560,"title":{},"body":{"index.html":{}}}],["server",{"_index":558,"title":{},"body":{"index.html":{}}}],["set",{"_index":178,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["setdisplaytime",{"_index":467,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["setdisplaytime(hours",{"_index":475,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["setduration",{"_index":138,"title":{},"body":{"classes/Timer.html":{}}}],["setduration(seconds",{"_index":182,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["sethours",{"_index":400,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["sethours(hours",{"_index":412,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["setinterval",{"_index":275,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["setisrunning",{"_index":139,"title":{},"body":{"classes/Timer.html":{}}}],["setisrunning(running",{"_index":189,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["setlast",{"_index":140,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["setminutes",{"_index":401,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["setminutes(minutes",{"_index":414,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["sets",{"_index":184,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["setseconds",{"_index":402,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["setseconds(seconds",{"_index":416,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["setstart",{"_index":141,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settime",{"_index":142,"title":{},"body":{"classes/Timer.html":{}}}],["settime(seconds",{"_index":196,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settimer",{"_index":480,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimer(hours",{"_index":226,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settimerbyhours",{"_index":481,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimerbyhours(hours",{"_index":235,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settimerbyminutes",{"_index":482,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimerbyminutes(minutes",{"_index":234,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settimerbyseconds",{"_index":483,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimerbyseconds(seconds",{"_index":231,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settimerforlongbreak",{"_index":361,"title":{},"body":{"components/TimerComponent.html":{}}}],["settimerforpomodoro",{"_index":362,"title":{},"body":{"components/TimerComponent.html":{}}}],["settimerforshortbreak",{"_index":363,"title":{},"body":{"components/TimerComponent.html":{}}}],["setting",{"_index":186,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["several",{"_index":353,"title":{},"body":{"components/TimerComponent.html":{}}}],["short",{"_index":375,"title":{},"body":{"components/TimerComponent.html":{}}}],["show",{"_index":259,"title":{},"body":{"classes/Timer.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerService.html":{}}}],["single",{"_index":304,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["size",{"_index":324,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["solid",{"_index":340,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["something",{"_index":159,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["spec\\.ts",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/timer",{"_index":307,"title":{},"body":{"components/TimerButtonComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"coverage.html":{}}}],["src/app/timer.service.ts",{"_index":98,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["src/app/timer.service.ts:100",{"_index":195,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:105",{"_index":176,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:110",{"_index":180,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:126",{"_index":502,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:129",{"_index":503,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:132",{"_index":501,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:135",{"_index":485,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:15",{"_index":162,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:153",{"_index":492,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:163",{"_index":495,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:172",{"_index":494,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:18",{"_index":166,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:182",{"_index":493,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:189",{"_index":491,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:194",{"_index":490,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:199",{"_index":489,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:204",{"_index":488,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:209",{"_index":487,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:21",{"_index":157,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:217",{"_index":500,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:230",{"_index":496,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:24",{"_index":169,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:27",{"_index":152,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:272",{"_index":498,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:30",{"_index":158,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:300",{"_index":486,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:33",{"_index":146,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:45",{"_index":171,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:53",{"_index":190,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:58",{"_index":181,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:66",{"_index":197,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:71",{"_index":170,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:80",{"_index":183,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:85",{"_index":175,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:90",{"_index":192,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:95",{"_index":179,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer/timer.component.ts",{"_index":349,"title":{},"body":{"components/TimerComponent.html":{},"coverage.html":{}}}],["src/app/timer/timer.component.ts:19",{"_index":365,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:23",{"_index":366,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:29",{"_index":377,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:34",{"_index":378,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:39",{"_index":371,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:46",{"_index":367,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:53",{"_index":374,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":523,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":526,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":129,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["start(timerdisplay",{"_index":260,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["started",{"_index":119,"title":{"index.html":{}},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["starting",{"_index":283,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["starts",{"_index":255,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["statements",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":125,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["stop",{"_index":209,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["stop(timerdisplay",{"_index":497,"title":{},"body":{"injectables/TimerService.html":{}}}],["stopped",{"_index":294,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["stops",{"_index":290,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["stored",{"_index":433,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"index.html":{}}}],["stores",{"_index":193,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{}}}],["string(\"0",{"_index":429,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["string(minutes",{"_index":430,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["stroke",{"_index":457,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["style",{"_index":470,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["support",{"_index":593,"title":{},"body":{"modules.html":{}}}],["suppose",{"_index":114,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["svg",{"_index":594,"title":{},"body":{"modules.html":{}}}],["syncs",{"_index":248,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["synctimerdisplay",{"_index":484,"title":{},"body":{"injectables/TimerService.html":{}}}],["synctimerdisplay(display",{"_index":250,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["table",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["test",{"_index":581,"title":{},"body":{"index.html":{}}}],["tests",{"_index":580,"title":{},"body":{"index.html":{}}}],["text",{"_index":317,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["this.alarminterval",{"_index":225,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.audio.play",{"_index":306,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.beep",{"_index":292,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.converthourstoseconds(hours",{"_index":227,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.convertminutestoseconds(minutes",{"_index":228,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.display",{"_index":454,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["this.display.getseconds",{"_index":435,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.duration",{"_index":203,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.gethoursontimer",{"_index":251,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.getminutesinhour",{"_index":252,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.getsecondsinminute",{"_index":253,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.hours",{"_index":422,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.isrunning",{"_index":201,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.last",{"_index":204,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.minutes",{"_index":423,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.seconds",{"_index":424,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.sethours(hours",{"_index":419,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.setminutes(minutes",{"_index":420,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.setseconds(seconds",{"_index":421,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.start",{"_index":205,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.stop",{"_index":392,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.synctimerdisplay(timerdisplay",{"_index":286,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.time",{"_index":202,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer",{"_index":221,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.gettime",{"_index":240,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.setduration(seconds",{"_index":232,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.setduration(time",{"_index":229,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.setisrunning(true",{"_index":264,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.setlast",{"_index":270,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.setstart",{"_index":269,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.settime(seconds",{"_index":233,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.settime(this.timer.getduration",{"_index":284,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.settime(time",{"_index":230,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timerdisplayservice.getdisplaystring",{"_index":455,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["this.timerdisplayservice.setdisplaytime(hours",{"_index":453,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["this.timerinterval",{"_index":223,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timerservice.settimerbyminutes(15",{"_index":393,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.settimerbyminutes(25",{"_index":388,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.settimerbyminutes(5",{"_index":394,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.start(this.timerdisplay",{"_index":390,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.stop(this.timerdisplay",{"_index":391,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.synctimerdisplay(this.timerdisplay",{"_index":389,"title":{},"body":{"components/TimerComponent.html":{}}}],["tick",{"_index":279,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["ticked",{"_index":121,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["ticking",{"_index":274,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["ticks",{"_index":211,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["time",{"_index":105,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["timer",{"_index":44,"title":{"classes/Timer.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["timer's",{"_index":217,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["timer'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["timer(0",{"_index":222,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["timer.component.css",{"_index":358,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.html",{"_index":359,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.max_clock_value",{"_index":241,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["timer.service",{"_index":386,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer/timer.component",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["timerbuttoncomponenet",{"_index":309,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["timerbuttoncomponent",{"_index":43,"title":{"components/TimerButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timercomponent",{"_index":46,"title":{"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timerdisplay",{"_index":258,"title":{"classes/TimerDisplay.html":{}},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["timerdisplay.max_clock_value",{"_index":426,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["timerdisplaycomponent",{"_index":48,"title":{"components/TimerDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{},"overview.html":{}}}],["timerdisplayservice",{"_index":447,"title":{"injectables/TimerDisplayService.html":{}},"body":{"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"coverage.html":{}}}],["timerinterval",{"_index":212,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["timerservice",{"_index":207,"title":{"injectables/TimerService.html":{}},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":333,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{}}}],["track",{"_index":104,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["tracking",{"_index":112,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["true",{"_index":172,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":224,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["unit",{"_index":579,"title":{},"body":{"index.html":{}}}],["updated",{"_index":257,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["updatedisplay",{"_index":445,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["updatedisplay(hours",{"_index":449,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["updates",{"_index":287,"title":{},"body":{"classes/Timer.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerService.html":{}}}],["use",{"_index":570,"title":{},"body":{"index.html":{}}}],["used",{"_index":441,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["user",{"_index":300,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["variable",{"_index":153,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["variables",{"_index":111,"title":{"miscellaneous/variables.html":{}},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":555,"title":{},"body":{"index.html":{}}}],["via",{"_index":583,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":383,"title":{},"body":{"components/TimerComponent.html":{}}}],["viewchild(timerdisplaycomponent",{"_index":380,"title":{},"body":{"components/TimerComponent.html":{}}}],["viewchildren",{"_index":384,"title":{},"body":{"components/TimerComponent.html":{}}}],["void",{"_index":188,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["way",{"_index":299,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["web",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["webkit",{"_index":456,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["weight",{"_index":326,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["well",{"_index":352,"title":{},"body":{"components/TimerComponent.html":{}}}],["whether",{"_index":116,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["width",{"_index":458,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["wrapper",{"_index":336,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["wrapper:hover",{"_index":347,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["zero",{"_index":289,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["zone.js",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'pomodoro-web'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pomodoro-web';\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TimerButtonComponent', 'selector': 'timer-button'},{'name': 'TimerComponent', 'selector': 'timer'},{'name': 'TimerDisplayComponent', 'selector': 'timer-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nTimerButtonComponent\n\nTimerButtonComponent\n\nAppModule -->\n\nTimerButtonComponent->AppModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nAppModule -->\n\nTimerComponent->AppModule\n\n\n\n\n\nTimerDisplayComponent\n\nTimerDisplayComponent\n\nAppModule -->\n\nTimerDisplayComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            TimerButtonComponent\n                        \n                        \n                            TimerComponent\n                        \n                        \n                            TimerDisplayComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { TimerComponent } from './timer/timer.component';\nimport { TimerDisplayComponent } from './timer-display/timer-display.component';\nimport { TimerButtonComponent } from './timer-button/timer-button.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TimerComponent,\n    TimerDisplayComponent,\n    TimerButtonComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule{ \n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timer.html":{"url":"classes/Timer.html","title":"class - Timer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/timer.service.ts\n        \n\n            \n                Description\n            \n            \n                The Timer class represents a model of a digital timer. A timer is able to\nkeep track of time in seconds. Additionally, a timer provides come convience\nvariables for tracking the the duration the timer is suppose to run, whether\nor not the timer is or isn't running, the time the timer was started, and the\ntime the timer last ticked down.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                duration\n                            \n                            \n                                    Private\n                                isRunning\n                            \n                            \n                                    Private\n                                last\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_CLOCK_VALUE\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_CLOCK_VALUE\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Private\n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDuration\n                            \n                            \n                                    Public\n                                getIsRunning\n                            \n                            \n                                    Public\n                                getLast\n                            \n                            \n                                    Public\n                                getLastDelta\n                            \n                            \n                                    Public\n                                getStart\n                            \n                            \n                                    Public\n                                getStartDelta\n                            \n                            \n                                    Public\n                                getTime\n                            \n                            \n                                    Public\n                                setDuration\n                            \n                            \n                                    Public\n                                setIsRunning\n                            \n                            \n                                    Public\n                                setLast\n                            \n                            \n                                    Public\n                                setStart\n                            \n                            \n                                    Public\n                                setTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer.service.ts:33\n                            \n                        \n\n                \n                    \n                            Creates a new Timer object. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            duration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:27\n                            \n                        \n\n                \n                    \n                        A convience variable for keeping track of the amount of time the timer is suppose to run. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isRunning\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:21\n                            \n                        \n\n                \n                    \n                        Whether or not the timer is running. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            last\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:30\n                            \n                        \n\n                \n                    \n                        A convience variable for keeping track of the last time something was done. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MAX_CLOCK_VALUE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:15\n                            \n                        \n\n                \n                    \n                        The maximum value for minutes and seconds. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MIN_CLOCK_VALUE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:18\n                            \n                        \n\n                \n                    \n                        The minimum value for hours, minutes, and seconds. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:33\n                            \n                        \n\n                \n                    \n                        A convience variable for keeping track of the time the timer was started. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:24\n                            \n                        \n\n                \n                    \n                        The time in seconds. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDuration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDuration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The duration of the timer in seconds. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIsRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIsRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the timer is running. Otherwise false. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time the timer last ticked down. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLastDelta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLastDelta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time in milliseconds since last was last set. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Returns the time the timer started at. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartDelta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartDelta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time in milliseconds since the timer was started. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time, in seconds, on the timer. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDuration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDuration(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:80\n                \n            \n\n\n            \n                \n                    Sets the duration of the timer in seconds. Note, duration is a convience\nvariable and setting it will not change the time on the timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIsRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIsRunning(running: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:53\n                \n            \n\n\n            \n                \n                    True when the timer is running. False when it is not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    running\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether or not the timer should be considered running.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:90\n                \n            \n\n\n            \n                \n                    Stores the value of Date.now() in the last variable. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:100\n                \n            \n\n\n            \n                \n                    Stores the value of Date.now() in the start variable. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTime(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:66\n                \n            \n\n\n            \n                \n                    Sets the time, in seconds, on the timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The time in seconds.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TimerDisplayComponent } from './timer-display/timer-display.component';\nimport { interval } from 'rxjs';\n\n/**\n * The Timer class represents a model of a digital timer. A timer is able to\n * keep track of time in seconds. Additionally, a timer provides come convience\n * variables for tracking the the duration the timer is suppose to run, whether\n * or not the timer is or isn't running, the time the timer was started, and the\n * time the timer last ticked down.\n */\nexport class Timer {\n\n  /** The maximum value for minutes and seconds. */\n  public static readonly MAX_CLOCK_VALUE = 60;\n\n  /** The minimum value for hours, minutes, and seconds. */\n  public static readonly MIN_CLOCK_VALUE = 0;\n\n  /** Whether or not the timer is running. */\n  private isRunning: boolean;\n\n  /** The time in seconds. */\n  private time: number;\n\n  /** A convience variable for keeping track of the amount of time the timer is suppose to run. */\n  private duration: number;\n\n  /** A convience variable for keeping track of the last time something was done. */\n  private last: number;\n\n  /** A convience variable for keeping track of the time the timer was started. */\n  private start: number;\n\n  /** Creates a new Timer object. */\n  constructor(time: number) {\n    this.isRunning = false;\n    this.time = time;\n    this.duration = 0;\n    this.last = 0;\n    this.start = 0;\n  }\n\n  /** @return True if the timer is running. Otherwise false. */\n  public getIsRunning() {\n    return this.isRunning;\n  }\n\n  /**\n   * True when the timer is running. False when it is not.\n   * @param running Whether or not the timer should be considered running.\n   */\n  public setIsRunning(running: boolean) {\n    this.isRunning = running;\n  }\n\n  /** @return The time, in seconds, on the timer. */\n  public getTime() {\n    return this.time;\n  }\n\n  /**\n   * Sets the time, in seconds, on the timer.\n   * @param seconds The time in seconds.\n   */\n  public setTime(seconds: number) {\n    this.time = seconds; \n  }\n\n  /** @return The duration of the timer in seconds. */\n  public getDuration() {\n    return this.duration;\n  }\n\n  /**\n   * Sets the duration of the timer in seconds. Note, duration is a convience\n   * variable and setting it will not change the time on the timer.\n   * @param seconds \n   */\n  public setDuration(seconds: number) {\n    this.duration = seconds;\n  }\n\n  /** @return The time the timer last ticked down. */\n  public getLast() {\n    return this.last;\n  }\n\n  /** Stores the value of Date.now() in the last variable. */\n  public setLast() {\n    this.last = Date.now();\n  }\n\n  /** @return Returns the time the timer started at. */\n  public getStart() {\n    return this.start;\n  }\n\n  /** Stores the value of Date.now() in the start variable. */\n  public setStart() {\n    this.start = Date.now();\n  }\n\n  /** @return The time in milliseconds since last was last set. */\n  public getLastDelta() {\n    return Date.now() - this.last;\n  }\n\n  /** @return The time in milliseconds since the timer was started. */\n  public getStartDelta() {\n    return Date.now() - this.start;\n  }\n\n}\n\n/**\n * The TimerService object provides the functionality to set, start, stop,\n * and reset a timer.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n  /** A Timer object. */\n  private timer: Timer;\n\n  /** The interval that ticks the timer down. */\n  private timerInterval: any;\n\n  /** The interval which keeps the alarm beepinmg. */\n  private alarmInterval: any;\n\n  /** The timer's alarm mp3 file. */\n  private audio = new Audio('assets/beep.mp3');\n\n\n  /**\n   * Creates a new TimerService object.\n   */\n  constructor() { \n    this.timer = new Timer(0);\n    this.timerInterval = undefined;\n    this.alarmInterval = undefined;\n  }\n\n  /**\n   * Sets the time on the timer in hours, minutes, and seconds.\n   * @param hours The number of hours on the timer.\n   * @param minutes The number of minutes on the timer.\n   * @param seconds The number of seconds on the timer.\n   */\n  public setTimer(hours: number, minutes: number, seconds: number) {\n    var time = this.convertHoursToSeconds(hours) + this.convertMinutesToSeconds(minutes) + seconds;\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /**\n   * Sets the time on the timer in seconds.\n   * @param seconds The number of seconds on the timer.\n   */\n  public setTimerBySeconds(seconds: number) {\n    this.timer.setDuration(seconds);\n    this.timer.setTime(seconds);\n  }\n\n  /**\n   * Sets the time on the timer in minutes.\n   * @param minutes The number of minutes on the timer.\n   */\n  public setTimerByMinutes(minutes: number) {\n    var time = this.convertMinutesToSeconds(minutes);\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /**\n   * Sets the time on the timer in hours.\n   * @param hours The number of hours on the timer.\n   */\n  public setTimerByHours(hours: number) {\n    var time = this.convertHoursToSeconds(hours);\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /** @return The number of seconds remaining in the current minute. */\n  public getSecondsInMinute() {\n    return this.timer.getTime() % Timer.MAX_CLOCK_VALUE;\n  }\n\n  /** @return The number of minutes remaining in the current hours. */\n  public getMinutesInHour() {\n    return Math.floor((this.timer.getTime() / Timer.MAX_CLOCK_VALUE) % Timer.MAX_CLOCK_VALUE);\n  }\n\n  /** @return The number of hours on the timer. */\n  public getHoursOnTimer() {\n    return Math.floor((this.timer.getTime() / Timer.MAX_CLOCK_VALUE) / Timer.MAX_CLOCK_VALUE);\n  }\n\n  /** @return The number of seconds in the passed in number of minutes. */\n  public convertMinutesToSeconds(minutes: number) {\n    return minutes * Timer.MAX_CLOCK_VALUE;\n  }\n\n  /** @return The number of seconds in the passed in number of hours. */\n  public convertHoursToSeconds(hours: number) {\n    return (hours * Timer.MAX_CLOCK_VALUE) * Timer.MAX_CLOCK_VALUE;\n  }\n\n    /**\n   * Syncs the time displayed by a TimerDisplayComponent with the Timer's time.\n   * @param display A TimerDisplayComponent.\n   */\n  public syncTimerDisplay(display: TimerDisplayComponent)\n  {\n    var hours = this.getHoursOnTimer();\n    var minutes = this.getMinutesInHour();\n    var seconds = this.getSecondsInMinute();\n  \n    display.updateDisplay(hours, minutes, seconds);\n  }\n\n  /**\n   * Starts the timer and keeps the connected TimerDisplayComponent updated.\n   * @param timerDisplay The TimerDisplayComponent to show the time on.\n   */\n  public start(timerDisplay: TimerDisplayComponent) {\n\n    //If the timer is not running, then start an an interval timer\n    //which compares dates, ticks down the time, and syncs the display.\n    if(!this.timer.getIsRunning()) \n    {\n\n      //Set the Timer to running.\n      this.timer.setIsRunning(true);\n\n      //Initialize the timer's start and last variable so that the correct timer time\n      //can be calculated accurately.\n      this.timer.setStart();\n      this.timer.setLast();\n\n      //Create the timer interval which holds the process of ticking down the time.\n      this.timerInterval = setInterval(() => {\n\n        //If the time since the last time the timer was set is greater than or equal to\n        //1000ms than we tick the timer.\n        if(this.timer.getLastDelta() >= 1000)\n        {\n          let passed = Math.floor(this.timer.getStartDelta() / 1000); //The time in seconds since starting the timer.\n          this.timer.setTime(this.timer.getDuration() - passed); //Sets the time on the timer to the duration of the timer minus the time passed.\n          this.syncTimerDisplay(timerDisplay); //Syncs the display with the timer.\n          this.timer.setLast(); //Updates the 'last' variable.\n        }\n        \n        //If the timer is less than or equal to zero it stops.\n        if(this.timer.getTime()  {\n          this.beep();\n        }, 1200);\n      }\n\n    } else {\n      //If the timer stopped itself by reaching zero or less we need to provide\n      //a way for the user to stop the alarm interval. This is clears the interval.\n      clearInterval(this.alarmInterval);\n      this.alarmInterval = undefined;\n\n    }\n  }\n\n  /** Plays a single alarm beep. */\n  public beep() {\n    this.audio.play();\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerButtonComponent.html":{"url":"components/TimerButtonComponent.html","title":"component - TimerButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timer-button/timer-button.component.ts\n\n\n    \n        Description\n    \n    \n        The TimerButtonComponenet class is a component which\nacts as a button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timer-button\n            \n\n            \n                styleUrls\n                ./timer-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./timer-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/timer-button/timer-button.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/timer-button/timer-button.component.ts:15\n                            \n                        \n                \n                    \n                        The text the button displays. \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * The TimerButtonComponenet class is a component which\n * acts as a button.\n */\n@Component({\n  selector: 'timer-button',\n  templateUrl: './timer-button.component.html',\n  styleUrls: ['./timer-button.component.css']\n})\nexport class TimerButtonComponent {\n\n  /** The text the button displays. */\n  @Input() buttonText: string;\n\n  constructor() { }\n  \n}\n\n    \n\n    \n        \n  {{ buttonText }}\n\n    \n\n    \n                \n                    ./timer-button.component.css\n                \n                :host\n{\n  display: block;\n\n  font-size: 2em;\n  font-weight: 700;\n  text-align: center;\n\n  height: 50px;\n\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\n\n.wrapper\n{\n  border-radius: 20px;\n  border: 3px solid #000; \n  padding: 10px;\n  background-color: #fff;\n}\n\n.wrapper:hover\n{\n  background-color: #eaeaea;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ buttonText }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TimerButtonComponent', 'selector': 'timer-button'},{'name': 'TimerComponent', 'selector': 'timer'},{'name': 'TimerDisplayComponent', 'selector': 'timer-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerComponent.html":{"url":"components/TimerComponent.html","title":"component - TimerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timer/timer.component.ts\n\n\n    \n        Description\n    \n    \n        The TimerComponent class is a component which represents a pomodoro \nproductivity timer. Each TimerComponent has a TimerDisplay, as well\nas several buttons which are responsible for setting the internal timer\non the timer.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timer\n            \n\n            \n                styleUrls\n                ./timer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./timer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                timerDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setTimerForLongBreak\n                            \n                            \n                                setTimerForPomodoro\n                            \n                            \n                                setTimerForShortBreak\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer/timer.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                        TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTimerForLongBreak\n                        \n                        \n                    \n                \n            \n            \n                \nsetTimerForLongBreak()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:46\n                \n            \n\n\n            \n                \n                    Sets the timer for a long break (15 minutes). \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTimerForPomodoro\n                        \n                        \n                    \n                \n            \n            \n                \nsetTimerForPomodoro()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:39\n                \n            \n\n\n            \n                \n                    Sets the timer for one pomodoro (25 minutes). \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTimerForShortBreak\n                        \n                        \n                    \n                \n            \n            \n                \nsetTimerForShortBreak()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:53\n                \n            \n\n\n            \n                \n                    Sets the timer for a short break (5 minutes). \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            start\n                        \n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:29\n                \n            \n\n\n            \n                \n                    Starts the timer. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:34\n                \n            \n\n\n            \n                \n                    Stops the timer. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimerDisplayComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(TimerDisplayComponent, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:19\n                            \n                        \n\n                \n                    \n                        A reference to the TimerDisplayComponent object attached to this timer. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ViewChildren, QueryList } from \"@angular/core\";\nimport { TimerDisplayComponent } from '../timer-display/timer-display.component';\nimport { TimerService } from '../timer.service';\n\n/**\n * The TimerComponent class is a component which represents a pomodoro \n * productivity timer. Each TimerComponent has a TimerDisplay, as well\n * as several buttons which are responsible for setting the internal timer\n * on the timer.\n */\n@Component({\n  selector: 'timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n\n  /** A reference to the TimerDisplayComponent object attached to this timer. */\n  @ViewChild(TimerDisplayComponent, {static: true}) timerDisplay: TimerDisplayComponent;\n\n  constructor(private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.timerService.setTimerByMinutes(25);\n    this.timerService.syncTimerDisplay(this.timerDisplay);\n  }\n  \n  /** Starts the timer. */\n  start() {\n    this.timerService.start(this.timerDisplay);\n  }\n\n  /** Stops the timer. */\n  stop() {\n    this.timerService.stop(this.timerDisplay);\n  }\n\n  /** Sets the timer for one pomodoro (25 minutes). */\n  setTimerForPomodoro() {\n    this.stop()\n    this.timerService.setTimerByMinutes(25);\n    this.timerService.syncTimerDisplay(this.timerDisplay);\n  }\n\n  /** Sets the timer for a long break (15 minutes). */\n  setTimerForLongBreak() {\n    this.stop()\n    this.timerService.setTimerByMinutes(15);\n    this.timerService.syncTimerDisplay(this.timerDisplay);\n  }\n\n  /** Sets the timer for a short break (5 minutes). */\n  setTimerForShortBreak() {\n    this.stop()\n    this.timerService.setTimerByMinutes(5);\n    this.timerService.syncTimerDisplay(this.timerDisplay);\n  }\n\n}\n    \n\n    \n        \n  \n    \n  \n\n\n\n  \n  \n\n\n\n  \n  \n  \n\n    \n\n    \n                \n                    ./timer.component.css\n                \n                :host\n{\n  display: block;\n  margin-top: 15%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TimerButtonComponent', 'selector': 'timer-button'},{'name': 'TimerComponent', 'selector': 'timer'},{'name': 'TimerDisplayComponent', 'selector': 'timer-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimerDisplay.html":{"url":"classes/TimerDisplay.html","title":"class - TimerDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimerDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/timer-display.service.ts\n        \n\n            \n                Description\n            \n            \n                The TimerDisplay class represents a model of a digital timer display.\nThe TimerDisplay can track time in the more of hours, minutes, and seconds.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hours\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_CLOCK_VALUE\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_CLOCK_VALUE\n                            \n                            \n                                    Private\n                                minutes\n                            \n                            \n                                    Private\n                                seconds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHours\n                            \n                            \n                                    Public\n                                getMinutes\n                            \n                            \n                                    Public\n                                getSeconds\n                            \n                            \n                                    Public\n                                setHours\n                            \n                            \n                                    Public\n                                setMinutes\n                            \n                            \n                                    Public\n                                setSeconds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hours: number, minutes: number, seconds: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer-display.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates a new TimerDisplay object.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        hours\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The number of hours to display on the timer.\n\n                                                        \n                                                \n                                                \n                                                        minutes\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The number of minutes to display on the timer.\n\n                                                        \n                                                \n                                                \n                                                        seconds\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The number of seconds to display on the timer.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hours\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:17\n                            \n                        \n\n                \n                    \n                        The number of hours on the timer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MAX_CLOCK_VALUE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:11\n                            \n                        \n\n                \n                    \n                        The maximum value for minutes and seconds. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MIN_CLOCK_VALUE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:14\n                            \n                        \n\n                \n                    \n                        The minimum value for hours, minutes, and seconds. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:20\n                            \n                        \n\n                \n                    \n                        The number of minutes on the timer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            seconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:23\n                            \n                        \n\n                \n                    \n                        The number of seconds on the timer. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHours\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHours()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of hours that will be displayed on the timer. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMinutes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinutes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of minutes that will be displayed on the timer. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeconds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of seconds that will be display on the timer. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHours\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHours(hours: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of hours to display on the timer. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMinutes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMinutes(minutes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of minutes to display on the timer. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSeconds(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of seconds to display on the timer. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Timer } from '../app/timer.service';\n\n/**\n * The TimerDisplay class represents a model of a digital timer display.\n * The TimerDisplay can track time in the more of hours, minutes, and seconds.\n */\nclass TimerDisplay {\n\n  /** The maximum value for minutes and seconds. */\n  public static readonly MAX_CLOCK_VALUE = 60;\n\n  /** The minimum value for hours, minutes, and seconds. */\n  public static readonly MIN_CLOCK_VALUE = 0;\n\n  /** The number of hours on the timer. */\n  private hours: number;\n\n  /** The number of minutes on the timer. */\n  private minutes: number;\n\n  /** The number of seconds on the timer. */\n  private seconds: number;\n\n  /**\n   * Creates a new TimerDisplay object.\n   * @param hours The number of hours to display on the timer.\n   * @param minutes The number of minutes to display on the timer.\n   * @param seconds The number of seconds to display on the timer.\n   */\n  constructor(hours: number, minutes: number, seconds: number) {\n    this.setHours(hours);\n    this.setMinutes(minutes);\n    this.setSeconds(seconds);\n  }\n\n  /** @return The number of hours that will be displayed on the timer. */\n  public getHours() {\n    return this.hours;\n  }\n\n  /** @return The number of minutes that will be displayed on the timer. */\n  public getMinutes() {\n    return this.minutes;\n  }\n\n  /** @return The number of seconds that will be display on the timer. */\n  public getSeconds() {\n    return this.seconds;\n  }\n\n  /** @param hours The number of hours to display on the timer. */\n  public setHours(hours: number) {\n    if(hours  TimerDisplay.MAX_CLOCK_VALUE) {\n      this.minutes = TimerDisplay.MAX_CLOCK_VALUE;\n\n    } else if(minutes  TimerDisplay.MAX_CLOCK_VALUE) {\n      this.seconds = TimerDisplay.MAX_CLOCK_VALUE;\n\n    }\n    else if(seconds  0) {\n        return String(\"0\" + minutes + \":\");\n\n      } else {\n        return String(minutes + \":\");\n      }\n    }\n  }\n\n  /** @return A formatted string representing the seconds stored in the timer display. */\n  private getSecondsString() {\n    var seconds = this.display.getSeconds()\n\n    // If the time is less than or equal to 9 seconds we add a leading 0 for display purposes.\n    if(seconds \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerDisplayComponent.html":{"url":"components/TimerDisplayComponent.html","title":"component - TimerDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timer-display/timer-display.component.ts\n\n\n    \n        Description\n    \n    \n        The TimerDisplayComponent is used to how a time in hours, minutes, and seconds\non the screen.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timer-display\n            \n\n            \n                styleUrls\n                ./timer-display.component.css\n            \n\n\n\n            \n                templateUrl\n                ./timer-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateDisplay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timerDisplayService: TimerDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer-display/timer-display.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timerDisplayService\n                                                  \n                                                        \n                                                                        TimerDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateDisplay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDisplay(hours: number, minutes: number, seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display/timer-display.component.ts:26\n                \n            \n\n\n            \n                \n                    Updates the display with the time passed in hours, minutes, and seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of hours to show on the display.\n\n                                    \n                                \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of minutes to show on the display.\n\n                                    \n                                \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of seconds to show on the display.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display/timer-display.component.ts:16\n                            \n                        \n\n                \n                    \n                        The string that holds the timer display's time. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { TimerDisplayService } from '../timer-display.service';\n\n/**\n * The TimerDisplayComponent is used to how a time in hours, minutes, and seconds\n * on the screen.\n */\n@Component({\n  selector: 'timer-display',\n  templateUrl: './timer-display.component.html',\n  styleUrls: ['./timer-display.component.css']\n})\nexport class TimerDisplayComponent {\n\n  /** The string that holds the timer display's time. */\n  display: string;\n\n  constructor(private timerDisplayService: TimerDisplayService) { }\n\n  /**\n   * Updates the display with the time passed in hours, minutes, and seconds\n   * @param hours The number of hours to show on the display.\n   * @param minutes The number of minutes to show on the display.\n   * @param seconds The number of seconds to show on the display.\n   */\n  public updateDisplay(hours: number, minutes: number, seconds: number) {\n    this.timerDisplayService.setDisplayTime(hours, minutes, seconds);\n    this.display = this.timerDisplayService.getDisplayString();\n  }\n\n}\n\n    \n\n    \n        {{ display }}\n\n    \n\n    \n                \n                    ./timer-display.component.css\n                \n                :host\n{\n  display: block;\n  color: #fff;\n\n  -webkit-text-stroke-width: 3px;\n  -webkit-text-stroke-color: black;\n\n  font-size: 10em;\n  text-align: center;  \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ display }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TimerButtonComponent', 'selector': 'timer-button'},{'name': 'TimerComponent', 'selector': 'timer'},{'name': 'TimerDisplayComponent', 'selector': 'timer-display'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerDisplayService.html":{"url":"injectables/TimerDisplayService.html","title":"injectable - TimerDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/timer-display.service.ts\n        \n\n            \n                Description\n            \n            \n                The TimerDisplayService class provides the functionality needed to\nrepresent time in hours, minutes, and seconds on a TimerDisplayComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDisplayString\n                            \n                            \n                                    Private\n                                getHoursString\n                            \n                            \n                                    Private\n                                getMinutesString\n                            \n                            \n                                    Private\n                                getSecondsString\n                            \n                            \n                                    Public\n                                setDisplayTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/timer-display.service.ts:101\n                            \n                        \n\n                \n                    \n                            Creates a new TimerDisplayService object.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDisplayString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDisplayString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A string formatted in the style of HH:MM:SS which represents the\ntime stored in the timer display.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getHoursString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHoursString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A formatted string representing the hours stored in the timer display. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMinutesString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinutesString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A formatted string representing the minutes stored in the timer display. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSecondsString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSecondsString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A formatted string representing the seconds stored in the timer display. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisplayTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisplayTime(hours: number, minutes: number, seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:116\n                \n            \n\n\n            \n                \n                    Sets the time to be displayed on the timer display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of hours to display.\n\n                                    \n                                \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of minutes to display.\n\n                                    \n                                \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of seconds to display.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimerDisplay\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:101\n                            \n                        \n\n                \n                    \n                        A TimerDisplay object which holds time in the form of hours, minutes, and seconds. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Timer } from '../app/timer.service';\n\n/**\n * The TimerDisplay class represents a model of a digital timer display.\n * The TimerDisplay can track time in the more of hours, minutes, and seconds.\n */\nclass TimerDisplay {\n\n  /** The maximum value for minutes and seconds. */\n  public static readonly MAX_CLOCK_VALUE = 60;\n\n  /** The minimum value for hours, minutes, and seconds. */\n  public static readonly MIN_CLOCK_VALUE = 0;\n\n  /** The number of hours on the timer. */\n  private hours: number;\n\n  /** The number of minutes on the timer. */\n  private minutes: number;\n\n  /** The number of seconds on the timer. */\n  private seconds: number;\n\n  /**\n   * Creates a new TimerDisplay object.\n   * @param hours The number of hours to display on the timer.\n   * @param minutes The number of minutes to display on the timer.\n   * @param seconds The number of seconds to display on the timer.\n   */\n  constructor(hours: number, minutes: number, seconds: number) {\n    this.setHours(hours);\n    this.setMinutes(minutes);\n    this.setSeconds(seconds);\n  }\n\n  /** @return The number of hours that will be displayed on the timer. */\n  public getHours() {\n    return this.hours;\n  }\n\n  /** @return The number of minutes that will be displayed on the timer. */\n  public getMinutes() {\n    return this.minutes;\n  }\n\n  /** @return The number of seconds that will be display on the timer. */\n  public getSeconds() {\n    return this.seconds;\n  }\n\n  /** @param hours The number of hours to display on the timer. */\n  public setHours(hours: number) {\n    if(hours  TimerDisplay.MAX_CLOCK_VALUE) {\n      this.minutes = TimerDisplay.MAX_CLOCK_VALUE;\n\n    } else if(minutes  TimerDisplay.MAX_CLOCK_VALUE) {\n      this.seconds = TimerDisplay.MAX_CLOCK_VALUE;\n\n    }\n    else if(seconds  0) {\n        return String(\"0\" + minutes + \":\");\n\n      } else {\n        return String(minutes + \":\");\n      }\n    }\n  }\n\n  /** @return A formatted string representing the seconds stored in the timer display. */\n  private getSecondsString() {\n    var seconds = this.display.getSeconds()\n\n    // If the time is less than or equal to 9 seconds we add a leading 0 for display purposes.\n    if(seconds \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerService.html":{"url":"injectables/TimerService.html","title":"injectable - TimerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/timer.service.ts\n        \n\n            \n                Description\n            \n            \n                The TimerService object provides the functionality to set, start, stop,\nand reset a timer.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alarmInterval\n                            \n                            \n                                    Private\n                                audio\n                            \n                            \n                                    Private\n                                timer\n                            \n                            \n                                    Private\n                                timerInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                beep\n                            \n                            \n                                    Public\n                                convertHoursToSeconds\n                            \n                            \n                                    Public\n                                convertMinutesToSeconds\n                            \n                            \n                                    Public\n                                getHoursOnTimer\n                            \n                            \n                                    Public\n                                getMinutesInHour\n                            \n                            \n                                    Public\n                                getSecondsInMinute\n                            \n                            \n                                    Public\n                                setTimer\n                            \n                            \n                                    Public\n                                setTimerByHours\n                            \n                            \n                                    Public\n                                setTimerByMinutes\n                            \n                            \n                                    Public\n                                setTimerBySeconds\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                            \n                                    Public\n                                syncTimerDisplay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/timer.service.ts:135\n                            \n                        \n\n                \n                    \n                            Creates a new TimerService object.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            beep\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beep()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:300\n                \n            \n\n\n            \n                \n                    Plays a single alarm beep. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertHoursToSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertHoursToSeconds(hours: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of seconds in the passed in number of hours. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertMinutesToSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertMinutesToSeconds(minutes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of seconds in the passed in number of minutes. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHoursOnTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHoursOnTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The number of hours on the timer. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMinutesInHour\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinutesInHour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The number of minutes remaining in the current hours. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSecondsInMinute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSecondsInMinute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of seconds remaining in the current minute. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimer(hours: number, minutes: number, seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:153\n                \n            \n\n\n            \n                \n                    Sets the time on the timer in hours, minutes, and seconds.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of hours on the timer.\n\n                                    \n                                \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of minutes on the timer.\n\n                                    \n                                \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of seconds on the timer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimerByHours\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimerByHours(hours: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:182\n                \n            \n\n\n            \n                \n                    Sets the time on the timer in hours.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of hours on the timer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimerByMinutes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimerByMinutes(minutes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:172\n                \n            \n\n\n            \n                \n                    Sets the time on the timer in minutes.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of minutes on the timer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimerBySeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimerBySeconds(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:163\n                \n            \n\n\n            \n                \n                    Sets the time on the timer in seconds.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of seconds on the timer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start(timerDisplay: TimerDisplayComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:230\n                \n            \n\n\n            \n                \n                    Starts the timer and keeps the connected TimerDisplayComponent updated.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    timerDisplay\n                                    \n                                                TimerDisplayComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The TimerDisplayComponent to show the time on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop(timerDisplay: TimerDisplayComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:272\n                \n            \n\n\n            \n                \n                    Stops the timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    timerDisplay\n                                    \n                                                TimerDisplayComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The TimerDisplayComponent to clear the time from.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            syncTimerDisplay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncTimerDisplay(display: TimerDisplayComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:217\n                \n            \n\n\n            \n                \n                    Syncs the time displayed by a TimerDisplayComponent with the Timer's time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    display\n                                    \n                                                TimerDisplayComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A TimerDisplayComponent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:132\n                            \n                        \n\n                \n                    \n                        The interval which keeps the alarm beepinmg. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            audio\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Audio('assets/beep.mp3')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:135\n                            \n                        \n\n                \n                    \n                        The timer's alarm mp3 file. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Timer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:126\n                            \n                        \n\n                \n                    \n                        A Timer object. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timerInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:129\n                            \n                        \n\n                \n                    \n                        The interval that ticks the timer down. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TimerDisplayComponent } from './timer-display/timer-display.component';\nimport { interval } from 'rxjs';\n\n/**\n * The Timer class represents a model of a digital timer. A timer is able to\n * keep track of time in seconds. Additionally, a timer provides come convience\n * variables for tracking the the duration the timer is suppose to run, whether\n * or not the timer is or isn't running, the time the timer was started, and the\n * time the timer last ticked down.\n */\nexport class Timer {\n\n  /** The maximum value for minutes and seconds. */\n  public static readonly MAX_CLOCK_VALUE = 60;\n\n  /** The minimum value for hours, minutes, and seconds. */\n  public static readonly MIN_CLOCK_VALUE = 0;\n\n  /** Whether or not the timer is running. */\n  private isRunning: boolean;\n\n  /** The time in seconds. */\n  private time: number;\n\n  /** A convience variable for keeping track of the amount of time the timer is suppose to run. */\n  private duration: number;\n\n  /** A convience variable for keeping track of the last time something was done. */\n  private last: number;\n\n  /** A convience variable for keeping track of the time the timer was started. */\n  private start: number;\n\n  /** Creates a new Timer object. */\n  constructor(time: number) {\n    this.isRunning = false;\n    this.time = time;\n    this.duration = 0;\n    this.last = 0;\n    this.start = 0;\n  }\n\n  /** @return True if the timer is running. Otherwise false. */\n  public getIsRunning() {\n    return this.isRunning;\n  }\n\n  /**\n   * True when the timer is running. False when it is not.\n   * @param running Whether or not the timer should be considered running.\n   */\n  public setIsRunning(running: boolean) {\n    this.isRunning = running;\n  }\n\n  /** @return The time, in seconds, on the timer. */\n  public getTime() {\n    return this.time;\n  }\n\n  /**\n   * Sets the time, in seconds, on the timer.\n   * @param seconds The time in seconds.\n   */\n  public setTime(seconds: number) {\n    this.time = seconds; \n  }\n\n  /** @return The duration of the timer in seconds. */\n  public getDuration() {\n    return this.duration;\n  }\n\n  /**\n   * Sets the duration of the timer in seconds. Note, duration is a convience\n   * variable and setting it will not change the time on the timer.\n   * @param seconds \n   */\n  public setDuration(seconds: number) {\n    this.duration = seconds;\n  }\n\n  /** @return The time the timer last ticked down. */\n  public getLast() {\n    return this.last;\n  }\n\n  /** Stores the value of Date.now() in the last variable. */\n  public setLast() {\n    this.last = Date.now();\n  }\n\n  /** @return Returns the time the timer started at. */\n  public getStart() {\n    return this.start;\n  }\n\n  /** Stores the value of Date.now() in the start variable. */\n  public setStart() {\n    this.start = Date.now();\n  }\n\n  /** @return The time in milliseconds since last was last set. */\n  public getLastDelta() {\n    return Date.now() - this.last;\n  }\n\n  /** @return The time in milliseconds since the timer was started. */\n  public getStartDelta() {\n    return Date.now() - this.start;\n  }\n\n}\n\n/**\n * The TimerService object provides the functionality to set, start, stop,\n * and reset a timer.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n  /** A Timer object. */\n  private timer: Timer;\n\n  /** The interval that ticks the timer down. */\n  private timerInterval: any;\n\n  /** The interval which keeps the alarm beepinmg. */\n  private alarmInterval: any;\n\n  /** The timer's alarm mp3 file. */\n  private audio = new Audio('assets/beep.mp3');\n\n\n  /**\n   * Creates a new TimerService object.\n   */\n  constructor() { \n    this.timer = new Timer(0);\n    this.timerInterval = undefined;\n    this.alarmInterval = undefined;\n  }\n\n  /**\n   * Sets the time on the timer in hours, minutes, and seconds.\n   * @param hours The number of hours on the timer.\n   * @param minutes The number of minutes on the timer.\n   * @param seconds The number of seconds on the timer.\n   */\n  public setTimer(hours: number, minutes: number, seconds: number) {\n    var time = this.convertHoursToSeconds(hours) + this.convertMinutesToSeconds(minutes) + seconds;\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /**\n   * Sets the time on the timer in seconds.\n   * @param seconds The number of seconds on the timer.\n   */\n  public setTimerBySeconds(seconds: number) {\n    this.timer.setDuration(seconds);\n    this.timer.setTime(seconds);\n  }\n\n  /**\n   * Sets the time on the timer in minutes.\n   * @param minutes The number of minutes on the timer.\n   */\n  public setTimerByMinutes(minutes: number) {\n    var time = this.convertMinutesToSeconds(minutes);\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /**\n   * Sets the time on the timer in hours.\n   * @param hours The number of hours on the timer.\n   */\n  public setTimerByHours(hours: number) {\n    var time = this.convertHoursToSeconds(hours);\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /** @return The number of seconds remaining in the current minute. */\n  public getSecondsInMinute() {\n    return this.timer.getTime() % Timer.MAX_CLOCK_VALUE;\n  }\n\n  /** @return The number of minutes remaining in the current hours. */\n  public getMinutesInHour() {\n    return Math.floor((this.timer.getTime() / Timer.MAX_CLOCK_VALUE) % Timer.MAX_CLOCK_VALUE);\n  }\n\n  /** @return The number of hours on the timer. */\n  public getHoursOnTimer() {\n    return Math.floor((this.timer.getTime() / Timer.MAX_CLOCK_VALUE) / Timer.MAX_CLOCK_VALUE);\n  }\n\n  /** @return The number of seconds in the passed in number of minutes. */\n  public convertMinutesToSeconds(minutes: number) {\n    return minutes * Timer.MAX_CLOCK_VALUE;\n  }\n\n  /** @return The number of seconds in the passed in number of hours. */\n  public convertHoursToSeconds(hours: number) {\n    return (hours * Timer.MAX_CLOCK_VALUE) * Timer.MAX_CLOCK_VALUE;\n  }\n\n    /**\n   * Syncs the time displayed by a TimerDisplayComponent with the Timer's time.\n   * @param display A TimerDisplayComponent.\n   */\n  public syncTimerDisplay(display: TimerDisplayComponent)\n  {\n    var hours = this.getHoursOnTimer();\n    var minutes = this.getMinutesInHour();\n    var seconds = this.getSecondsInMinute();\n  \n    display.updateDisplay(hours, minutes, seconds);\n  }\n\n  /**\n   * Starts the timer and keeps the connected TimerDisplayComponent updated.\n   * @param timerDisplay The TimerDisplayComponent to show the time on.\n   */\n  public start(timerDisplay: TimerDisplayComponent) {\n\n    //If the timer is not running, then start an an interval timer\n    //which compares dates, ticks down the time, and syncs the display.\n    if(!this.timer.getIsRunning()) \n    {\n\n      //Set the Timer to running.\n      this.timer.setIsRunning(true);\n\n      //Initialize the timer's start and last variable so that the correct timer time\n      //can be calculated accurately.\n      this.timer.setStart();\n      this.timer.setLast();\n\n      //Create the timer interval which holds the process of ticking down the time.\n      this.timerInterval = setInterval(() => {\n\n        //If the time since the last time the timer was set is greater than or equal to\n        //1000ms than we tick the timer.\n        if(this.timer.getLastDelta() >= 1000)\n        {\n          let passed = Math.floor(this.timer.getStartDelta() / 1000); //The time in seconds since starting the timer.\n          this.timer.setTime(this.timer.getDuration() - passed); //Sets the time on the timer to the duration of the timer minus the time passed.\n          this.syncTimerDisplay(timerDisplay); //Syncs the display with the timer.\n          this.timer.setLast(); //Updates the 'last' variable.\n        }\n        \n        //If the timer is less than or equal to zero it stops.\n        if(this.timer.getTime()  {\n          this.beep();\n        }, 1200);\n      }\n\n    } else {\n      //If the timer stopped itself by reaching zero or less we need to provide\n      //a way for the user to stop the alarm interval. This is clears the interval.\n      clearInterval(this.alarmInterval);\n      this.alarmInterval = undefined;\n\n    }\n  }\n\n  /** Plays a single alarm beep. */\n  public beep() {\n    this.audio.play();\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/timer-button/timer-button.component.ts\n            \n            component\n            TimerButtonComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/timer-display.service.ts\n            \n            class\n            TimerDisplay\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/app/timer-display.service.ts\n            \n            injectable\n            TimerDisplayService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/timer-display/timer-display.component.ts\n            \n            component\n            TimerDisplayComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/timer.service.ts\n            \n            class\n            Timer\n            \n                66 %\n                (14/21)\n            \n        \n        \n            \n                \n                src/app/timer.service.ts\n            \n            injectable\n            TimerService\n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                src/app/timer/timer.component.ts\n            \n            component\n            TimerComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.0.1\n        \n            @angular/common : ~8.0.1\n        \n            @angular/compiler : ~8.0.1\n        \n            @angular/core : ~8.0.1\n        \n            @angular/forms : ~8.0.1\n        \n            @angular/platform-browser : ~8.0.1\n        \n            @angular/platform-browser-dynamic : ~8.0.1\n        \n            @angular/router : ~8.0.1\n        \n            bootstrap : ^4.3.1\n        \n            jquery : ^3.4.1\n        \n            popper.js : ^1.15.0\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nPomodoroWeb\nThis project was generated with Angular CLI version 8.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\npomodoro-web\n\n\n\n\n\n\n\nb2a5aa9021244070bbefa6f4fcfce6fd98e99c03\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nTimerButtonComponent\n\nTimerButtonComponent\n\nAppModule -->\n\nTimerButtonComponent->AppModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nAppModule -->\n\nTimerComponent->AppModule\n\n\n\n\n\nTimerDisplayComponent\n\nTimerDisplayComponent\n\nAppModule -->\n\nTimerDisplayComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
