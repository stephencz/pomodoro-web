var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.377,1,0.661]],["body/components/AppComponent.html",[0,0.664,1,1.216,2,1.709,3,0.607,4,0.494,5,1.607,6,1.607,7,1.607,8,1.607,9,0.494,10,2.676,11,1.607,12,2.395,13,1.855,14,2.325,15,1.989,16,4.527,17,1.989,18,4.168,19,0.494,20,1.259,21,4.527,22,0.607,23,0.06,24,1.607,25,1.607,26,1.381,27,2.747,28,3.311,29,0.731,30,3.368,31,0.607,32,0.607,33,0.866,34,0.203,35,1.187,36,1.989,37,1.709,38,1.607,39,1.216,40,1.607,41,0.904,42,1.607,43,0.866,44,0.664,45,1.607,46,0.866,47,1.607,48,0.494,49,1.607,50,0.866,51,1.607,52,1.607,53,1.607,54,0.038,55,0.047,56,0.038]],["title/modules/AppModule.html",[57,1.694,58,1.434]],["body/modules/AppModule.html",[1,1.325,3,0.57,4,0.464,9,0.464,23,0.061,31,0.903,32,0.57,33,0.813,34,0.19,35,1.114,43,1.254,44,0.645,46,1.254,48,0.715,50,1.254,54,0.036,55,0.045,56,0.036,57,2.084,58,2.909,59,2.084,60,1.764,61,3.494,62,2.899,63,3.183,64,2.512,65,2.512,66,2.512,67,2.512,68,3.183,69,1.764,70,2.084,71,3.162,72,4.007,73,2.512,74,1.764,75,4.007,76,4.007,77,2.512,78,3.162,79,3.162,80,1.296,81,1.764,82,2.084,83,3.162,84,1.764,85,2.512,86,3.162]],["title/classes/AppPage.html",[34,0.155,87,1.694]],["body/classes/AppPage.html",[3,0.674,4,0.548,9,0.548,14,2.085,19,0.548,23,0.06,29,0.963,31,0.674,33,0.961,34,0.225,37,1.532,54,0.042,55,0.05,56,0.042,74,2.085,87,2.925,88,2.085,89,2.968,90,1.34,91,4.9,92,4.9,93,3.737,94,1.34,95,3.737,96,2.968,97,2.118,98,3.737,99,4.439,100,3.737,101,3.737]],["title/classes/Timer.html",[34,0.155,44,0.377]],["body/classes/Timer.html",[3,0.199,4,0.162,9,0.27,14,0.616,19,0.162,20,0.555,22,0.725,23,0.061,25,0.877,26,1.607,29,0.99,31,0.426,32,0.199,33,0.473,34,0.166,39,0.848,41,0.597,44,0.764,48,0.513,54,0.013,55,0.021,56,0.013,69,0.616,80,0.453,81,0.616,88,0.616,90,0.555,94,1.288,97,2.24,102,0.728,103,0.832,104,0.877,105,1.026,106,1.026,107,1.46,108,2.042,109,2.428,110,2.363,111,1.46,112,1.556,113,1.46,114,3.114,115,1.026,116,1.46,117,3.268,118,2.186,119,1.813,120,2.62,121,1.46,122,2.852,123,2.412,124,3.562,125,2.186,126,2.777,127,2.525,128,1.875,129,1.573,130,1.84,131,1.317,132,1.317,133,2.412,134,2.418,135,2.186,136,2.186,137,2.186,138,2.186,139,2.186,140,2.186,141,2.186,142,1.838,143,1.838,144,2.186,145,2.186,146,1.838,147,0.555,148,1.46,149,2.064,150,1.838,151,1.317,152,1.076,153,1.252,154,1.128,155,1.128,156,1.105,157,2.81,158,2.62,159,1.46,160,2.62,161,1.105,162,1.105,163,1.46,164,1.46,165,0.877,166,1.105,167,1.026,168,1.797,169,1.252,170,1.105,171,1.026,172,1.719,173,1.105,174,1.105,175,1.105,176,1.535,177,1.46,178,2.013,179,1.105,180,1.105,181,2.186,182,2.427,183,1.105,184,1.105,185,1.105,186,1.46,187,1.105,188,2.12,189,1.46,190,1.211,191,1.211,192,1.076,193,1.46,194,1.105,195,1.46,196,1.105,197,2.186,198,2.908,199,1.105,200,1.46,201,1.105,202,0.648,203,2.777,204,0.728,205,1.875,206,1.875,207,1.875,208,2.186,209,2.186,210,1.92,211,1.126,212,0.728,213,1.211,214,0.878,215,1.46,216,0.878,217,1.46,218,2.186,219,0.878,220,0.878,221,1.875,222,0.878,223,0.878,224,0.878,225,0.878,226,0.878,227,1.46,228,1.875,229,1.46,230,0.878,231,1.46,232,1.46,233,1.875,234,1.875,235,0.878,236,0.878,237,0.878,238,0.878,239,0.878,240,1.46,241,1.46,242,0.878,243,0.878,244,0.878,245,2.908,246,0.878,247,1.46,248,0.878,249,2.013,250,0.878,251,0.878,252,1.875,253,0.616,254,0.832,255,0.878,256,0.878,257,0.878,258,0.878,259,0.878,260,0.728,261,0.878,262,0.878,263,0.389,264,0.728,265,0.878,266,0.878,267,0.878,268,0.878,269,0.878,270,0.878,271,0.878,272,0.878,273,0.878,274,0.878,275,1.46,276,0.878,277,0.616,278,0.878,279,0.878,280,0.878,281,0.878,282,1.026,283,0.878,284,0.878,285,0.878,286,1.46,287,0.878,288,0.878,289,0.878,290,0.878,291,0.878,292,0.728,293,1.026,294,1.46,295,0.728,296,0.878,297,0.878,298,0.878,299,0.878,300,0.878,301,0.878,302,0.878,303,0.878,304,0.878,305,0.878,306,0.878,307,0.878,308,0.878,309,0.878,310,1.46,311,0.878]],["title/components/TimerButtonComponent.html",[0,0.377,43,0.661]],["body/components/TimerButtonComponent.html",[0,0.682,1,0.748,2,1.556,3,0.524,4,0.427,5,1.388,6,1.388,7,1.388,8,1.388,9,0.427,11,1.388,12,2.317,13,1.192,15,1.812,17,1.812,19,0.427,22,0.524,23,0.06,24,1.812,29,0.824,31,0.524,32,0.524,33,0.748,34,0.254,35,1.025,36,1.812,37,1.556,38,1.388,39,1.152,40,1.388,41,0.824,42,1.388,43,1.152,44,0.737,45,1.388,46,0.748,47,1.388,48,0.427,49,1.388,50,0.748,51,2.017,52,1.388,53,1.388,54,0.033,55,0.043,56,0.033,82,2.786,103,1.025,147,1.276,254,1.025,312,1.733,313,2.31,314,3.797,315,3.797,316,4.768,317,4.227,318,3.797,319,3.797,320,4.649,321,3.797,322,2.786,323,3.797,324,1.622,325,1.917,326,1.917,327,2.502,328,1.917,329,2.31,330,2.31,331,2.31,332,1.917,333,1.917,334,2.31,335,2.31,336,2.502,337,1.917,338,3.358,339,2.908,340,2.908,341,3.016,342,2.31,343,1.917,344,2.31,345,2.31,346,2.908,347,2.908,348,3.797,349,3.016,350,2.31,351,2.908,352,2.908]],["title/components/TimerComponent.html",[0,0.377,46,0.661]],["body/components/TimerComponent.html",[0,0.617,1,0.563,2,1.281,3,0.394,4,0.321,5,1.044,6,1.044,7,1.044,8,1.044,9,0.321,11,1.044,12,2.148,13,0.897,15,1.491,17,1.491,19,0.321,20,0.944,22,0.657,23,0.061,27,2.621,29,1.031,31,0.717,32,0.394,33,0.563,34,0.219,35,0.771,36,1.491,37,1.281,38,1.044,39,1.158,40,1.044,41,0.791,42,1.044,43,0.563,44,0.757,45,1.044,46,1.184,47,1.044,48,0.642,49,1.044,50,1.023,51,1.044,52,1.044,53,1.044,54,0.025,55,0.035,56,0.025,80,0.897,81,1.221,84,1.221,85,1.738,90,0.944,94,1.36,103,0.771,104,1.491,129,1.897,133,2.621,147,0.661,153,1.281,154,0.897,155,0.897,165,1.491,168,1.887,169,0.897,172,0.897,176,2.219,188,2.44,190,2.059,192,1.586,211,2.087,213,2.621,254,0.771,260,2.059,263,1.482,295,2.059,324,2.034,325,1.442,326,1.442,336,1.442,337,1.442,353,1.738,354,3.125,355,3.125,356,3.125,357,3.125,358,3.125,359,3.125,360,3.125,361,3.125,362,3.646,363,3.125,364,3.646,365,3.977,366,3.977,367,3.977,368,3.977,369,3.977,370,2.188,371,3.125,372,2.188,373,2.188,374,2.188,375,3.125,376,3.977,377,3.646,378,2.188,379,3.125,380,3.125,381,2.188,382,3.125,383,2.483,384,2.188,385,2.188,386,3.125,387,3.125,388,2.188,389,3.125,390,3.125,391,3.125,392,2.188,393,2.188,394,2.188,395,2.188,396,1.738,397,2.188,398,4.206,399,2.188,400,2.188,401,3.977,402,2.188,403,2.188,404,2.188,405,1.738,406,2.188,407,3.125,408,2.188]],["title/classes/TimerDisplay.html",[34,0.155,263,0.906]],["body/classes/TimerDisplay.html",[3,0.352,4,0.286,9,0.286,19,0.286,20,0.868,22,0.821,23,0.061,24,0.93,25,1.371,26,1.723,29,1.031,31,0.518,32,0.352,34,0.205,39,0.501,41,0.817,44,0.75,54,0.022,55,0.033,56,0.022,88,1.088,90,0.868,94,1.269,97,2.173,103,1.415,104,1.371,105,1.604,106,1.604,108,1.604,109,1.629,110,2.426,127,2.584,129,2.005,130,2.345,131,1.905,132,1.905,134,2.371,147,0.589,149,2.161,151,1.604,152,1.013,153,1.178,154,1.544,155,1.544,165,1.371,167,1.604,168,2.071,169,1.544,171,1.604,172,2.047,192,1.203,202,0.687,210,1.798,253,2.102,254,1.731,263,1.572,282,1.088,293,1.088,312,1.968,409,1.285,410,1.894,411,2.993,412,2.993,413,2.993,414,2.874,415,2.874,416,2.874,417,2.284,418,2.874,419,1.95,420,1.95,421,1.95,422,1.95,423,1.95,424,1.95,425,1.95,426,2.284,427,1.95,428,1.95,429,1.95,430,1.95,431,1.95,432,1.549,433,1.549,434,1.549,435,1.549,436,1.549,437,2.284,438,2.284,439,1.549,440,2.993,441,1.549,442,2.284,443,1.549,444,1.549,445,1.549,446,1.549,447,1.285,448,1.549,449,1.549,450,1.549,451,1.549,452,1.549,453,1.549]],["title/components/TimerDisplayComponent.html",[0,0.377,48,0.377]],["body/components/TimerDisplayComponent.html",[0,0.576,1,0.646,2,1.411,3,0.453,4,0.369,5,1.199,6,1.199,7,1.199,8,1.199,9,0.369,11,1.199,12,2.233,13,1.03,15,1.643,17,1.643,19,0.369,20,1.04,22,0.708,23,0.06,24,2.016,29,0.852,31,0.621,32,0.453,33,0.646,34,0.151,35,0.885,36,1.643,37,1.411,38,1.199,39,1.087,40,1.199,41,0.916,42,1.199,43,0.646,44,0.736,45,1.199,46,0.646,47,1.199,48,0.671,49,1.199,50,0.646,51,1.643,52,1.199,53,1.199,54,0.028,55,0.039,56,0.028,80,1.732,90,1.04,94,0.759,103,1.213,109,2.181,110,2.357,134,1.874,147,0.759,149,2.078,154,1.411,155,1.411,168,2.024,172,1.954,192,0.885,210,1.874,249,2.269,254,1.794,264,3.012,277,1.921,292,2.269,312,1.732,322,2.588,324,1.402,325,1.656,326,1.656,327,1.656,328,1.656,332,1.656,333,1.656,343,1.656,349,2.735,350,1.996,396,1.996,454,1.996,455,3.443,456,3.443,457,3.928,458,3.443,459,3.443,460,2.513,461,2.55,462,3.443,463,3.443,464,2.513,465,3.443,466,2.513,467,2.513,468,2.513,469,2.513,470,3.443,471,3.443,472,1.996,473,2.513,474,2.513]],["title/injectables/TimerDisplayService.html",[202,0.906,461,1.434]],["body/injectables/TimerDisplayService.html",[3,0.394,4,0.32,9,0.32,19,0.32,20,0.942,22,0.562,23,0.061,24,2.005,26,1.279,29,0.976,31,0.562,32,0.394,34,0.219,39,0.561,41,0.473,44,0.74,48,0.32,54,0.025,55,0.035,56,0.025,90,0.942,94,1.269,97,2.235,103,1.099,104,1.488,105,1.218,106,1.218,108,1.218,109,2.085,110,2.407,112,1.438,127,2.71,129,1.488,130,1.74,131,1.218,132,1.218,134,2.267,147,0.942,149,2.118,151,1.74,152,1.099,153,1.492,154,0.895,155,0.895,165,1.041,167,1.218,168,2.048,169,1.492,171,1.218,172,2.023,188,1.218,192,0.769,202,0.769,210,1.895,212,1.438,253,2.031,254,1.777,263,1.54,277,1.218,282,1.218,293,1.218,312,1.886,409,1.438,410,1.438,411,1.734,412,1.734,413,1.734,417,1.734,426,1.734,432,1.734,433,1.734,434,1.734,435,1.734,436,1.734,437,2.478,438,2.478,439,1.734,440,3.156,441,1.734,442,2.478,443,1.734,444,1.734,445,3.338,446,3.156,447,2.769,448,3.156,449,1.734,450,1.734,451,1.734,452,1.734,453,1.734,461,2.031,475,1.438,476,2.183,477,2.183,478,3.641,479,3.641,480,3.641,481,3.12,482,3.12,483,2.183,484,2.183,485,2.183,486,2.183,487,2.183,488,2.183,489,2.183,490,2.183,491,2.183]],["title/components/TimerInputComponent.html",[0,0.377,50,0.661]],["body/components/TimerInputComponent.html",[0,0.622,1,0.752,2,1.561,3,0.527,4,0.429,5,1.394,6,1.394,7,1.394,8,1.394,9,0.429,11,1.394,12,2.32,13,1.198,15,1.817,17,1.817,19,0.429,20,1.15,22,0.687,23,0.06,29,0.974,31,0.527,32,0.527,33,0.752,34,0.176,35,1.03,36,1.817,37,1.561,38,1.394,39,1.155,40,1.394,41,0.826,42,1.394,43,0.752,44,0.738,45,1.394,46,0.752,47,1.394,48,0.429,49,1.394,50,1.155,51,2.222,52,1.394,53,1.394,54,0.033,55,0.043,56,0.033,84,2.598,90,1.15,94,0.882,147,1.279,149,1.561,152,1.03,192,1.03,312,1.909,322,1.926,324,1.63,327,2.51,328,1.926,329,2.322,330,2.322,331,2.322,332,1.926,333,1.926,334,2.322,335,2.322,336,1.926,337,1.926,338,2.322,341,3.026,342,2.322,343,1.926,344,2.322,345,2.322,405,3.366,472,2.322,492,2.322,493,4.237,494,3.809,495,4.49,496,3.809,497,4.237,498,3.809,499,4.49,500,2.922,501,2.922,502,3.809,503,2.922,504,2.922,505,2.922,506,2.922,507,2.922,508,2.922,509,2.922]],["title/injectables/TimerService.html",[202,0.906,211,1.226]],["body/injectables/TimerService.html",[3,0.2,4,0.163,9,0.348,14,0.619,19,0.163,20,0.557,22,0.743,23,0.061,25,0.53,26,1.256,29,0.974,31,0.427,32,0.2,33,0.475,34,0.143,39,0.85,41,0.826,44,0.762,48,0.659,54,0.013,55,0.021,56,0.013,69,1.03,80,0.455,81,0.619,90,0.557,94,1.289,97,2.242,102,0.732,103,1.292,104,0.53,105,0.619,106,0.619,107,0.882,108,1.54,109,2.39,110,2.358,111,0.882,112,1.561,113,0.882,114,2.433,115,0.619,116,0.882,117,2.626,118,1.466,119,1.216,120,1.882,121,0.882,122,2.509,123,1.819,124,3.119,125,1.466,126,2.626,127,2.478,128,0.882,129,0.881,130,1.03,131,0.619,132,0.619,133,2.417,134,2.425,135,0.882,136,0.882,137,0.882,138,0.882,139,0.882,140,0.882,141,0.882,144,0.882,145,0.882,147,0.715,148,0.882,149,2.103,151,1.322,152,1.165,153,1.436,154,1.561,155,1.561,157,2.417,158,1.882,159,0.882,160,1.466,163,0.882,164,0.882,165,0.53,167,0.619,168,1.926,169,1.131,171,0.619,172,1.902,176,1.03,177,0.882,178,1.561,181,1.466,182,2.433,186,0.882,188,2.248,189,0.882,190,0.732,191,0.732,192,1.292,193,0.882,195,0.882,197,1.466,198,2.626,200,0.882,202,0.65,203,3.024,204,0.732,205,1.882,206,1.882,207,1.882,208,2.192,209,2.192,210,1.923,211,1.577,212,1.216,213,2.019,214,0.882,215,1.882,216,1.882,217,2.192,218,2.783,219,1.466,220,1.882,221,2.433,222,1.466,223,1.882,224,1.466,225,0.882,226,0.882,227,1.466,228,1.882,229,1.466,230,1.466,231,1.466,232,1.466,233,1.882,234,1.882,235,1.466,236,0.882,237,0.882,238,1.466,239,1.466,240,2.192,241,2.192,242,1.466,243,2.192,244,0.882,245,2.914,246,2.192,247,1.466,248,2.192,249,2.309,250,1.466,251,1.466,252,2.192,253,1.03,254,0.972,255,1.466,256,0.882,257,0.882,258,0.882,259,0.882,260,1.216,261,1.466,262,1.466,263,0.835,264,1.216,265,1.466,266,0.882,267,0.882,268,0.882,269,0.882,270,0.882,271,0.882,272,0.882,273,0.882,274,0.882,275,1.466,276,0.882,277,0.619,278,0.882,279,0.882,280,0.882,281,0.882,282,1.03,283,0.882,284,0.882,285,0.882,286,1.466,287,0.882,288,0.882,289,0.882,290,0.882,291,0.882,292,0.732,293,1.03,294,1.466,295,1.216,296,0.882,297,0.882,298,0.882,299,0.882,300,0.882,301,0.882,302,0.882,303,0.882,304,0.882,305,0.882,306,0.882,307,0.882,308,1.466,309,1.466,310,2.626,311,0.882,475,0.732,510,1.846,511,1.846,512,1.846,513,1.846,514,1.846,515,1.846,516,1.846,517,1.846,518,1.11,519,1.11,520,1.11,521,1.11,522,1.11,523,1.11,524,1.11,525,1.11,526,1.11,527,1.11,528,1.11,529,1.11,530,1.11,531,1.11,532,1.11,533,1.11,534,1.11,535,1.11]],["title/coverage.html",[536,2.778]],["body/coverage.html",[0,0.713,1,0.866,9,0.494,10,2.676,22,0.607,23,0.06,34,0.272,43,0.866,44,0.494,46,0.866,48,0.494,50,0.866,54,0.038,55,0.047,56,0.038,80,1.381,82,2.22,84,1.879,87,2.22,89,2.676,102,2.747,152,1.187,157,3.117,169,2.058,202,1.469,211,1.607,263,1.187,312,1.993,313,2.676,353,2.676,409,2.747,454,2.676,461,1.879,492,2.676,536,2.676,537,3.368,538,3.368,539,3.368,540,3.368,541,3.368,542,4.168,543,3.368,544,3.368,545,3.368,546,3.368,547,3.368,548,3.368,549,3.368,550,3.368,551,3.368,552,3.368,553,3.368,554,3.368,555,3.368,556,2.676,557,3.311,558,4.73,559,2.676,560,3.311,561,2.676,562,2.676,563,3.368,564,3.368]],["title/dependencies.html",[60,1.723,565,2.152]],["body/dependencies.html",[23,0.06,32,0.676,54,0.043,55,0.05,56,0.043,60,2.093,62,2.473,73,3.535,74,2.483,77,2.981,204,2.473,566,3.752,567,5.171,568,3.752,569,3.752,570,3.752,571,3.752,572,3.752,573,3.752,574,3.752,575,3.752,576,3.752,577,3.752,578,3.752,579,3.752,580,3.752,581,3.752]],["title/index.html",[19,0.316,123,1.418,582,2.152]],["body/index.html",[0,0.668,4,0.5,13,1.396,23,0.048,27,2.245,28,2.706,41,0.739,54,0.039,55,0.048,56,0.039,70,2.245,96,2.706,119,3.214,122,2.766,152,1.2,191,2.245,410,2.245,447,2.245,583,3.406,584,4.197,585,3.406,586,4.549,587,4.549,588,3.406,589,3.406,590,3.406,591,4.197,592,5.032,593,3.406,594,3.406,595,3.406,596,3.406,597,3.406,598,3.406,599,3.406,600,3.406,601,3.406,602,4.549,603,4.549,604,3.406,605,4.877,606,3.406,607,3.406,608,3.406,609,3.406,610,3.406,611,2.706,612,4.197,613,4.749,614,3.406,615,4.197,616,4.197,617,3.406,618,4.749,619,3.406,620,3.406,621,4.549,622,3.406,623,3.406,624,3.406,625,3.406]],["title/modules.html",[59,2.304]],["body/modules.html",[23,0.053,54,0.046,55,0.053,56,0.046,58,2.282,59,2.696,74,2.282,626,4.091,627,4.091,628,4.091]],["title/overview.html",[629,2.778]],["body/overview.html",[1,1.312,2,1.492,23,0.058,35,1.282,43,1.204,46,1.204,48,0.687,50,1.204,54,0.041,55,0.05,56,0.041,57,2.88,58,2.936,60,2.03,61,2.891,62,2.398,63,2.891,64,2.891,65,2.891,66,2.891,67,2.891,68,3.471,69,2.03,70,2.398,88,2.03,383,2.891,475,2.398,629,2.891,630,3.639,631,3.639,632,3.639]],["title/miscellaneous/variables.html",[115,1.723,633,1.709]],["body/miscellaneous/variables.html",[19,0.551,22,0.855,23,0.06,25,2.264,26,1.945,54,0.043,55,0.05,56,0.043,115,2.093,153,1.824,176,2.483,178,2.473,556,2.981,557,3.898,559,2.981,560,2.981,561,3.535,562,3.535,611,3.535,633,2.981,634,4.45,635,3.752,636,3.752,637,3.752,638,3.752]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":169,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["0.9.1",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":345,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerInputComponent.html":{}}}],["1",{"_index":630,"title":{},"body":{"overview.html":{}}}],["1.15.0",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":505,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["1000",{"_index":286,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["1000ms",{"_index":283,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["10em",{"_index":474,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["10px",{"_index":347,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["1200",{"_index":298,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["14/19",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["14/21",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":377,"title":{},"body":{"components/TimerComponent.html":{}}}],["2",{"_index":631,"title":{},"body":{"overview.html":{}}}],["2/3",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":338,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerInputComponent.html":{}}}],["23px",{"_index":506,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["25",{"_index":380,"title":{},"body":{"components/TimerComponent.html":{}}}],["2em",{"_index":329,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerInputComponent.html":{}}}],["3",{"_index":632,"title":{},"body":{"overview.html":{}}}],["3.4.1",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":343,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["4.3.1",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["4/8",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":383,"title":{},"body":{"components/TimerComponent.html":{},"overview.html":{}}}],["50",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":335,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerInputComponent.html":{}}}],["53",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["6.4.0",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":165,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["63",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["7/11",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["7/13",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":331,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerInputComponent.html":{}}}],["73",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["8.0.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":589,"title":{},"body":{"index.html":{}}}],["9",{"_index":450,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["accurately",{"_index":273,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["acts",{"_index":315,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["actual_component",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["add",{"_index":451,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["additionally",{"_index":111,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["alarm",{"_index":218,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["alarminterval",{"_index":220,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["align",{"_index":332,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["amount",{"_index":159,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["angular",{"_index":586,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{},"index.html":{}}}],["app.component",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app/timer.service",{"_index":432,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":58,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":87,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["artifacts",{"_index":606,"title":{},"body":{"index.html":{}}}],["attached",{"_index":390,"title":{},"body":{"components/TimerComponent.html":{}}}],["audio",{"_index":223,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["audio('assets/beep.mp3",{"_index":224,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["automatically",{"_index":597,"title":{},"body":{"index.html":{}}}],["b2a5aa9021244070bbefa6f4fcfce6fd98e99c03",{"_index":625,"title":{},"body":{"index.html":{}}}],["background",{"_index":348,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["beep",{"_index":310,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["beepinmg",{"_index":219,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["black",{"_index":473,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["block",{"_index":326,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["boolean",{"_index":160,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["bootstrap",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":341,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerInputComponent.html":{}}}],["bottom",{"_index":339,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["break",{"_index":376,"title":{},"body":{"components/TimerComponent.html":{}}}],["browse",{"_index":628,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":98,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":605,"title":{},"body":{"index.html":{}}}],["button",{"_index":316,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["button'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["button.component",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.css",{"_index":317,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["button.component.html",{"_index":318,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["button.component.ts",{"_index":313,"title":{},"body":{"components/TimerButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:15",{"_index":321,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["button/timer",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"coverage.html":{}}}],["buttons",{"_index":358,"title":{},"body":{"components/TimerComponent.html":{}}}],["buttontext",{"_index":320,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["calculated",{"_index":272,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["center",{"_index":333,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["change",{"_index":191,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["check",{"_index":623,"title":{},"body":{"index.html":{}}}],["class",{"_index":34,"title":{"classes/AppPage.html":{},"classes/Timer.html":{},"classes/TimerDisplay.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["classes",{"_index":88,"title":{},"body":{"classes/AppPage.html":{},"classes/Timer.html":{},"classes/TimerDisplay.html":{},"overview.html":{}}}],["clear",{"_index":531,"title":{},"body":{"injectables/TimerService.html":{}}}],["clearinterval(this.alarminterval",{"_index":307,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["clears",{"_index":306,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["cli",{"_index":587,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":600,"title":{},"body":{"index.html":{}}}],["color",{"_index":349,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["come",{"_index":113,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["compares",{"_index":266,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{},"overview.html":{}}}],["connected",{"_index":261,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["considered",{"_index":195,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["constructor(hours",{"_index":417,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["constructor(private",{"_index":396,"title":{},"body":{"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["constructor(time",{"_index":148,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["constructor(timerdisplayservice",{"_index":460,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["constructor(timerservice",{"_index":370,"title":{},"body":{"components/TimerComponent.html":{}}}],["context",{"_index":561,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["converthourstoseconds",{"_index":510,"title":{},"body":{"injectables/TimerService.html":{}}}],["converthourstoseconds(hours",{"_index":251,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["convertminutestoseconds",{"_index":511,"title":{},"body":{"injectables/TimerService.html":{}}}],["convertminutestoseconds(minutes",{"_index":250,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["convience",{"_index":114,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["correct",{"_index":271,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["coverage",{"_index":536,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":276,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["creates",{"_index":151,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["current",{"_index":241,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["customtime",{"_index":405,"title":{},"body":{"components/TimerComponent.html":{},"components/TimerInputComponent.html":{}}}],["customtimesubmitted",{"_index":497,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["date.now",{"_index":198,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["dates",{"_index":267,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["declarations",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":386,"title":{},"body":{"components/TimerComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["dependencies",{"_index":60,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":103,"title":{},"body":{"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["dev",{"_index":594,"title":{},"body":{"index.html":{}}}],["development",{"_index":590,"title":{},"body":{"index.html":{}}}],["digital",{"_index":106,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["directives",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":604,"title":{},"body":{"index.html":{}}}],["directory",{"_index":608,"title":{},"body":{"index.html":{}}}],["display",{"_index":254,"title":{},"body":{"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["display's",{"_index":465,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["display.component",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["display.component.css",{"_index":457,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.component.html",{"_index":458,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.component.ts",{"_index":454,"title":{},"body":{"components/TimerDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:16",{"_index":462,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.component.ts:26",{"_index":464,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.service",{"_index":466,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["display.service.ts",{"_index":409,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:101",{"_index":482,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:11",{"_index":420,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:116",{"_index":490,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:126",{"_index":483,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:134",{"_index":486,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:14",{"_index":421,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:145",{"_index":487,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:161",{"_index":488,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["display.service.ts:17",{"_index":419,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:20",{"_index":422,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:23",{"_index":418,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:38",{"_index":423,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:43",{"_index":424,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:48",{"_index":425,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:53",{"_index":427,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:63",{"_index":429,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.service.ts:76",{"_index":431,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["display.updatedisplay(hours",{"_index":259,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["display/timer",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"classes/Timer.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["displayed",{"_index":253,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["displays",{"_index":323,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["dist",{"_index":607,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["done",{"_index":164,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["down",{"_index":126,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["duration",{"_index":117,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["dynamic",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":619,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":89,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":95,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":93,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":355,"title":{},"body":{"components/TimerComponent.html":{}}}],["eaeaea",{"_index":352,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["element(by.css('app",{"_index":100,"title":{},"body":{"classes/AppPage.html":{}}}],["end",{"_index":618,"title":{},"body":{"index.html":{}}}],["environment",{"_index":557,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":282,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["eventemitter",{"_index":499,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["execute",{"_index":615,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["exports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["false",{"_index":178,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":350,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["files",{"_index":599,"title":{},"body":{"index.html":{}}}],["flag",{"_index":610,"title":{},"body":{"index.html":{}}}],["font",{"_index":327,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["form",{"_index":491,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["formatted",{"_index":445,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["formsmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["functionality",{"_index":212,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["further",{"_index":620,"title":{},"body":{"index.html":{}}}],["generate",{"_index":602,"title":{},"body":{"index.html":{}}}],["generated",{"_index":585,"title":{},"body":{"index.html":{}}}],["getdisplaystring",{"_index":478,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["getduration",{"_index":135,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["gethours",{"_index":411,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["gethoursontimer",{"_index":248,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["gethoursstring",{"_index":479,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["getisrunning",{"_index":136,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getlast",{"_index":137,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getlastdelta",{"_index":138,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getminutes",{"_index":412,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["getminutesinhour",{"_index":246,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getminutesstring",{"_index":480,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["getseconds",{"_index":413,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["getsecondsinminute",{"_index":243,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getsecondsstring",{"_index":448,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["getstart",{"_index":139,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getstartdelta",{"_index":140,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["gettime",{"_index":141,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["getting",{"_index":582,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":91,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":622,"title":{},"body":{"index.html":{}}}],["greater",{"_index":281,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["h1')).gettext",{"_index":101,"title":{},"body":{"classes/AppPage.html":{}}}],["height",{"_index":334,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerInputComponent.html":{}}}],["help",{"_index":621,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":485,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["holds",{"_index":277,"title":{},"body":{"classes/Timer.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["host",{"_index":325,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{}}}],["hours",{"_index":172,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["http://localhost:4200",{"_index":596,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["if(!isnan(this.customtime",{"_index":503,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["if(!this.timer.getisrunning",{"_index":268,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["if(hours",{"_index":439,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["if(minutes",{"_index":441,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["if(seconds",{"_index":442,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["if(this.timer.getlastdelta",{"_index":285,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["if(this.timer.gettime",{"_index":296,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["implements",{"_index":361,"title":{},"body":{"components/TimerComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["imports",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["initialize",{"_index":270,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["injectable",{"_index":202,"title":{"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["injectables",{"_index":475,"title":{},"body":{"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"overview.html":{}}}],["input",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["input.component",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"components/TimerComponent.html":{}}}],["input.component.css",{"_index":493,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["input.component.html",{"_index":494,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["input.component.ts",{"_index":492,"title":{},"body":{"components/TimerInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:10",{"_index":501,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["input.component.ts:12",{"_index":498,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["input.component.ts:16",{"_index":500,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["input/timer",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"components/TimerComponent.html":{},"components/TimerInputComponent.html":{},"coverage.html":{}}}],["input:focus",{"_index":507,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["inputs",{"_index":319,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["internal",{"_index":360,"title":{},"body":{"components/TimerComponent.html":{}}}],["interval",{"_index":203,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["isn't",{"_index":121,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["isrunning",{"_index":128,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["itself",{"_index":300,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["jquery",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":617,"title":{},"body":{"index.html":{}}}],["keep",{"_index":107,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["keeping",{"_index":158,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["keeps",{"_index":217,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["last",{"_index":124,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["leading",{"_index":452,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{},"overview.html":{}}}],["less",{"_index":293,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["long",{"_index":375,"title":{},"body":{"components/TimerComponent.html":{}}}],["margin",{"_index":336,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerInputComponent.html":{}}}],["matching",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor((this.timer.gettime",{"_index":247,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["math.floor(customtime",{"_index":407,"title":{},"body":{"components/TimerComponent.html":{}}}],["math.floor(this.timer.getstartdelta",{"_index":287,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["max_clock_value",{"_index":131,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["maximum",{"_index":167,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["methods",{"_index":90,"title":{},"body":{"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["milliseconds",{"_index":181,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["min_clock_value",{"_index":132,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["minimum",{"_index":171,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["minus",{"_index":290,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["minute",{"_index":242,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["minutes",{"_index":168,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["miscellaneous",{"_index":633,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":105,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["module",{"_index":57,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":59,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":410,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"index.html":{}}}],["mp3",{"_index":222,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["navigate",{"_index":595,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":92,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":302,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["needed",{"_index":476,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["new",{"_index":152,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":592,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":365,"title":{},"body":{"components/TimerComponent.html":{}}}],["none",{"_index":509,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["note",{"_index":189,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["number",{"_index":149,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["object",{"_index":153,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":379,"title":{},"body":{"components/TimerComponent.html":{}}}],["oninit",{"_index":324,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["optional",{"_index":155,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["otherwise",{"_index":177,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["out",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":508,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["output",{"_index":502,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["outputs",{"_index":496,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["overview",{"_index":629,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":565,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":346,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["param",{"_index":210,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["parameters",{"_index":154,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["passed",{"_index":249,"title":{},"body":{"classes/Timer.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerService.html":{}}}],["plays",{"_index":308,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["pomodoro",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["pomodoroweb",{"_index":583,"title":{},"body":{"index.html":{}}}],["popper.js",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":127,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["process",{"_index":278,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["prod",{"_index":609,"title":{},"body":{"index.html":{}}}],["production",{"_index":611,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["productivity",{"_index":354,"title":{},"body":{"components/TimerComponent.html":{}}}],["project",{"_index":584,"title":{},"body":{"index.html":{}}}],["promise",{"_index":99,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["protractor",{"_index":96,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":303,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["providedin",{"_index":214,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["providers",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":112,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["public",{"_index":134,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["purposes",{"_index":453,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["querylist",{"_index":394,"title":{},"body":{"components/TimerComponent.html":{}}}],["radius",{"_index":342,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerInputComponent.html":{}}}],["reaching",{"_index":301,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["readme",{"_index":624,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":130,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["reference",{"_index":389,"title":{},"body":{"components/TimerComponent.html":{}}}],["reload",{"_index":598,"title":{},"body":{"index.html":{}}}],["remaining",{"_index":240,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["represent",{"_index":477,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["representing",{"_index":446,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["represents",{"_index":104,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["require",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{},"overview.html":{}}}],["responsible",{"_index":359,"title":{},"body":{"components/TimerComponent.html":{}}}],["result",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":97,"title":{},"body":{"classes/AppPage.html":{},"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["returns",{"_index":94,"title":{},"body":{"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["run",{"_index":119,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["running",{"_index":122,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["rxjs",{"_index":204,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":601,"title":{},"body":{"index.html":{}}}],["screen",{"_index":456,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["seconds",{"_index":110,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["serve",{"_index":593,"title":{},"body":{"index.html":{}}}],["server",{"_index":591,"title":{},"body":{"index.html":{}}}],["set",{"_index":182,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["setdisplaytime",{"_index":481,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["setdisplaytime(hours",{"_index":489,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["setduration",{"_index":142,"title":{},"body":{"classes/Timer.html":{}}}],["setduration(seconds",{"_index":186,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["sethours",{"_index":414,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["sethours(hours",{"_index":426,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["setinterval",{"_index":280,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["setisrunning",{"_index":143,"title":{},"body":{"classes/Timer.html":{}}}],["setisrunning(running",{"_index":193,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["setlast",{"_index":144,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["setminutes",{"_index":415,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["setminutes(minutes",{"_index":428,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["sets",{"_index":188,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["setseconds",{"_index":416,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["setseconds(seconds",{"_index":430,"title":{},"body":{"classes/TimerDisplay.html":{}}}],["setstart",{"_index":145,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settime",{"_index":146,"title":{},"body":{"classes/Timer.html":{}}}],["settime(seconds",{"_index":200,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settimer",{"_index":512,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimer(hours",{"_index":230,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settimerbyhours",{"_index":513,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimerbyhours(hours",{"_index":239,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settimerbyminutes",{"_index":514,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimerbyminutes(minutes",{"_index":238,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settimerbyseconds",{"_index":515,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimerbyseconds(seconds",{"_index":235,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["settimerforcustom",{"_index":366,"title":{},"body":{"components/TimerComponent.html":{}}}],["settimerforlongbreak",{"_index":367,"title":{},"body":{"components/TimerComponent.html":{}}}],["settimerforpomodoro",{"_index":368,"title":{},"body":{"components/TimerComponent.html":{}}}],["settimerforshortbreak",{"_index":369,"title":{},"body":{"components/TimerComponent.html":{}}}],["setting",{"_index":190,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["several",{"_index":357,"title":{},"body":{"components/TimerComponent.html":{}}}],["short",{"_index":382,"title":{},"body":{"components/TimerComponent.html":{}}}],["show",{"_index":264,"title":{},"body":{"classes/Timer.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerService.html":{}}}],["single",{"_index":309,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["size",{"_index":328,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["solid",{"_index":344,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerInputComponent.html":{}}}],["something",{"_index":163,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"index.html":{}}}],["spec\\.ts",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/timer",{"_index":312,"title":{},"body":{"components/TimerButtonComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"coverage.html":{}}}],["src/app/timer.service.ts",{"_index":102,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["src/app/timer.service.ts:100",{"_index":199,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:105",{"_index":180,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:110",{"_index":184,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:126",{"_index":534,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:129",{"_index":535,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:132",{"_index":533,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:135",{"_index":517,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:15",{"_index":166,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:153",{"_index":524,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:163",{"_index":527,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:172",{"_index":526,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:18",{"_index":170,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:182",{"_index":525,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:189",{"_index":523,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:194",{"_index":522,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:199",{"_index":521,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:204",{"_index":520,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:209",{"_index":519,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:21",{"_index":161,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:217",{"_index":532,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:230",{"_index":528,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:24",{"_index":173,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:27",{"_index":156,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:272",{"_index":530,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:30",{"_index":162,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:300",{"_index":518,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/timer.service.ts:33",{"_index":150,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:45",{"_index":175,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:53",{"_index":194,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:58",{"_index":185,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:66",{"_index":201,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:71",{"_index":174,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:80",{"_index":187,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:85",{"_index":179,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:90",{"_index":196,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer.service.ts:95",{"_index":183,"title":{},"body":{"classes/Timer.html":{}}}],["src/app/timer/timer.component.ts",{"_index":353,"title":{},"body":{"components/TimerComponent.html":{},"coverage.html":{}}}],["src/app/timer/timer.component.ts:20",{"_index":388,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:22",{"_index":371,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:26",{"_index":372,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:32",{"_index":384,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:37",{"_index":385,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:42",{"_index":378,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:49",{"_index":374,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:56",{"_index":381,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:62",{"_index":373,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":559,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":560,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":133,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["start(timerdisplay",{"_index":265,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["started",{"_index":123,"title":{"index.html":{}},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["starting",{"_index":288,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["starts",{"_index":260,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["statements",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":129,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["stop",{"_index":213,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["stop(timerdisplay",{"_index":529,"title":{},"body":{"injectables/TimerService.html":{}}}],["stopped",{"_index":299,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["stops",{"_index":295,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["stored",{"_index":447,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"index.html":{}}}],["stores",{"_index":197,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{}}}],["string(\"0",{"_index":443,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["string(minutes",{"_index":444,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["stroke",{"_index":471,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["style",{"_index":484,"title":{},"body":{"injectables/TimerDisplayService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["submitcustomtime",{"_index":495,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["support",{"_index":626,"title":{},"body":{"modules.html":{}}}],["suppose",{"_index":118,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["svg",{"_index":627,"title":{},"body":{"modules.html":{}}}],["syncs",{"_index":252,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["synctimerdisplay",{"_index":516,"title":{},"body":{"injectables/TimerService.html":{}}}],["synctimerdisplay(display",{"_index":255,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["table",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["test",{"_index":614,"title":{},"body":{"index.html":{}}}],["tests",{"_index":613,"title":{},"body":{"index.html":{}}}],["text",{"_index":322,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["this.alarminterval",{"_index":229,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.audio.play",{"_index":311,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.beep",{"_index":297,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.converthourstoseconds(hours",{"_index":231,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.convertminutestoseconds(minutes",{"_index":232,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.customtimesubmitted.emit(this.customtime",{"_index":504,"title":{},"body":{"components/TimerInputComponent.html":{}}}],["this.display",{"_index":468,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["this.display.getseconds",{"_index":449,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.duration",{"_index":207,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.gethoursontimer",{"_index":256,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.getminutesinhour",{"_index":257,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.getsecondsinminute",{"_index":258,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.hours",{"_index":436,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.isrunning",{"_index":205,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.last",{"_index":208,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.minutes",{"_index":437,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.seconds",{"_index":438,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.sethours(hours",{"_index":433,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.setminutes(minutes",{"_index":434,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.setseconds(seconds",{"_index":435,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["this.start",{"_index":209,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.stop",{"_index":401,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.synctimerdisplay(timerdisplay",{"_index":291,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.time",{"_index":206,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer",{"_index":225,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.gettime",{"_index":244,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.setduration(seconds",{"_index":236,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.setduration(time",{"_index":233,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.setisrunning(true",{"_index":269,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.setlast",{"_index":275,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.setstart",{"_index":274,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.settime(seconds",{"_index":237,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.settime(this.timer.getduration",{"_index":289,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timer.settime(time",{"_index":234,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timerdisplayservice.getdisplaystring",{"_index":469,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["this.timerdisplayservice.setdisplaytime(hours",{"_index":467,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["this.timerinput.customtime",{"_index":406,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerinterval",{"_index":227,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["this.timerservice.settimer(hours",{"_index":408,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.settimerbyminutes(15",{"_index":403,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.settimerbyminutes(25",{"_index":402,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.settimerbyminutes(5",{"_index":404,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.settimerbyseconds(25",{"_index":397,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.start(this.timerdisplay",{"_index":399,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.stop(this.timerdisplay",{"_index":400,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.synctimerdisplay(this.timerdisplay",{"_index":398,"title":{},"body":{"components/TimerComponent.html":{}}}],["tick",{"_index":284,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["ticked",{"_index":125,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["ticking",{"_index":279,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["ticks",{"_index":215,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["time",{"_index":109,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["timer",{"_index":44,"title":{"classes/Timer.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["timer's",{"_index":221,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["timer'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["timer(0",{"_index":226,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["timer.component.css",{"_index":362,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.html",{"_index":363,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.max_clock_value",{"_index":245,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["timer.service",{"_index":395,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer/timer.component",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["timerbuttoncomponenet",{"_index":314,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["timerbuttoncomponent",{"_index":43,"title":{"components/TimerButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timercomponent",{"_index":46,"title":{"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timerdisplay",{"_index":263,"title":{"classes/TimerDisplay.html":{}},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["timerdisplay.max_clock_value",{"_index":440,"title":{},"body":{"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{}}}],["timerdisplaycomponent",{"_index":48,"title":{"components/TimerDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{},"overview.html":{}}}],["timerdisplayservice",{"_index":461,"title":{"injectables/TimerDisplayService.html":{}},"body":{"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"coverage.html":{}}}],["timerinput",{"_index":364,"title":{},"body":{"components/TimerComponent.html":{}}}],["timerinputcomponent",{"_index":50,"title":{"components/TimerInputComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timerinterval",{"_index":216,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["timerservice",{"_index":211,"title":{"injectables/TimerService.html":{}},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":337,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerInputComponent.html":{}}}],["track",{"_index":108,"title":{},"body":{"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{}}}],["tracking",{"_index":116,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["true",{"_index":176,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":228,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["unit",{"_index":612,"title":{},"body":{"index.html":{}}}],["updated",{"_index":262,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["updatedisplay",{"_index":459,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["updatedisplay(hours",{"_index":463,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["updates",{"_index":292,"title":{},"body":{"classes/Timer.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerService.html":{}}}],["use",{"_index":603,"title":{},"body":{"index.html":{}}}],["used",{"_index":455,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["user",{"_index":305,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"classes/TimerDisplay.html":{},"injectables/TimerDisplayService.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"classes/Timer.html":{},"components/TimerButtonComponent.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["variable",{"_index":157,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"coverage.html":{}}}],["variables",{"_index":115,"title":{"miscellaneous/variables.html":{}},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":588,"title":{},"body":{"index.html":{}}}],["via",{"_index":616,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":392,"title":{},"body":{"components/TimerComponent.html":{}}}],["viewchild(timerdisplaycomponent",{"_index":387,"title":{},"body":{"components/TimerComponent.html":{}}}],["viewchild(timerinputcomponent",{"_index":391,"title":{},"body":{"components/TimerComponent.html":{}}}],["viewchildren",{"_index":393,"title":{},"body":{"components/TimerComponent.html":{}}}],["void",{"_index":192,"title":{},"body":{"classes/Timer.html":{},"components/TimerComponent.html":{},"classes/TimerDisplay.html":{},"components/TimerDisplayComponent.html":{},"injectables/TimerDisplayService.html":{},"components/TimerInputComponent.html":{},"injectables/TimerService.html":{}}}],["way",{"_index":304,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["web",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["webkit",{"_index":470,"title":{},"body":{"components/TimerDisplayComponent.html":{}}}],["weight",{"_index":330,"title":{},"body":{"components/TimerButtonComponent.html":{},"components/TimerInputComponent.html":{}}}],["well",{"_index":356,"title":{},"body":{"components/TimerComponent.html":{}}}],["whether",{"_index":120,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["width",{"_index":472,"title":{},"body":{"components/TimerDisplayComponent.html":{},"components/TimerInputComponent.html":{}}}],["wrapper",{"_index":340,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["wrapper:hover",{"_index":351,"title":{},"body":{"components/TimerButtonComponent.html":{}}}],["zero",{"_index":294,"title":{},"body":{"classes/Timer.html":{},"injectables/TimerService.html":{}}}],["zone.js",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'pomodoro-web'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pomodoro-web';\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TimerButtonComponent', 'selector': 'timer-button'},{'name': 'TimerComponent', 'selector': 'timer'},{'name': 'TimerDisplayComponent', 'selector': 'timer-display'},{'name': 'TimerInputComponent', 'selector': 'timer-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nTimerButtonComponent\n\nTimerButtonComponent\n\nAppModule -->\n\nTimerButtonComponent->AppModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nAppModule -->\n\nTimerComponent->AppModule\n\n\n\n\n\nTimerDisplayComponent\n\nTimerDisplayComponent\n\nAppModule -->\n\nTimerDisplayComponent->AppModule\n\n\n\n\n\nTimerInputComponent\n\nTimerInputComponent\n\nAppModule -->\n\nTimerInputComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            TimerButtonComponent\n                        \n                        \n                            TimerComponent\n                        \n                        \n                            TimerDisplayComponent\n                        \n                        \n                            TimerInputComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { TimerComponent } from './timer/timer.component';\nimport { TimerDisplayComponent } from './timer-display/timer-display.component';\nimport { TimerButtonComponent } from './timer-button/timer-button.component';\nimport { TimerInputComponent } from './timer-input/timer-input.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TimerComponent,\n    TimerDisplayComponent,\n    TimerButtonComponent,\n    TimerInputComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule{ \n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timer.html":{"url":"classes/Timer.html","title":"class - Timer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/timer.service.ts\n        \n\n            \n                Description\n            \n            \n                The Timer class represents a model of a digital timer. A timer is able to\nkeep track of time in seconds. Additionally, a timer provides come convience\nvariables for tracking the the duration the timer is suppose to run, whether\nor not the timer is or isn't running, the time the timer was started, and the\ntime the timer last ticked down.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                duration\n                            \n                            \n                                    Private\n                                isRunning\n                            \n                            \n                                    Private\n                                last\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_CLOCK_VALUE\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_CLOCK_VALUE\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Private\n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDuration\n                            \n                            \n                                    Public\n                                getIsRunning\n                            \n                            \n                                    Public\n                                getLast\n                            \n                            \n                                    Public\n                                getLastDelta\n                            \n                            \n                                    Public\n                                getStart\n                            \n                            \n                                    Public\n                                getStartDelta\n                            \n                            \n                                    Public\n                                getTime\n                            \n                            \n                                    Public\n                                setDuration\n                            \n                            \n                                    Public\n                                setIsRunning\n                            \n                            \n                                    Public\n                                setLast\n                            \n                            \n                                    Public\n                                setStart\n                            \n                            \n                                    Public\n                                setTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer.service.ts:33\n                            \n                        \n\n                \n                    \n                            Creates a new Timer object. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            duration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:27\n                            \n                        \n\n                \n                    \n                        A convience variable for keeping track of the amount of time the timer is suppose to run. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isRunning\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:21\n                            \n                        \n\n                \n                    \n                        Whether or not the timer is running. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            last\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:30\n                            \n                        \n\n                \n                    \n                        A convience variable for keeping track of the last time something was done. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MAX_CLOCK_VALUE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:15\n                            \n                        \n\n                \n                    \n                        The maximum value for minutes and seconds. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MIN_CLOCK_VALUE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:18\n                            \n                        \n\n                \n                    \n                        The minimum value for hours, minutes, and seconds. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:33\n                            \n                        \n\n                \n                    \n                        A convience variable for keeping track of the time the timer was started. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:24\n                            \n                        \n\n                \n                    \n                        The time in seconds. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDuration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDuration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The duration of the timer in seconds. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIsRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIsRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the timer is running. Otherwise false. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time the timer last ticked down. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLastDelta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLastDelta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time in milliseconds since last was last set. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Returns the time the timer started at. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartDelta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartDelta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time in milliseconds since the timer was started. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time, in seconds, on the timer. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDuration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDuration(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:80\n                \n            \n\n\n            \n                \n                    Sets the duration of the timer in seconds. Note, duration is a convience\nvariable and setting it will not change the time on the timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIsRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIsRunning(running: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:53\n                \n            \n\n\n            \n                \n                    True when the timer is running. False when it is not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    running\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether or not the timer should be considered running.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:90\n                \n            \n\n\n            \n                \n                    Stores the value of Date.now() in the last variable. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:100\n                \n            \n\n\n            \n                \n                    Stores the value of Date.now() in the start variable. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTime(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:66\n                \n            \n\n\n            \n                \n                    Sets the time, in seconds, on the timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The time in seconds.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TimerDisplayComponent } from './timer-display/timer-display.component';\nimport { interval } from 'rxjs';\n\n/**\n * The Timer class represents a model of a digital timer. A timer is able to\n * keep track of time in seconds. Additionally, a timer provides come convience\n * variables for tracking the the duration the timer is suppose to run, whether\n * or not the timer is or isn't running, the time the timer was started, and the\n * time the timer last ticked down.\n */\nexport class Timer {\n\n  /** The maximum value for minutes and seconds. */\n  public static readonly MAX_CLOCK_VALUE = 60;\n\n  /** The minimum value for hours, minutes, and seconds. */\n  public static readonly MIN_CLOCK_VALUE = 0;\n\n  /** Whether or not the timer is running. */\n  private isRunning: boolean;\n\n  /** The time in seconds. */\n  private time: number;\n\n  /** A convience variable for keeping track of the amount of time the timer is suppose to run. */\n  private duration: number;\n\n  /** A convience variable for keeping track of the last time something was done. */\n  private last: number;\n\n  /** A convience variable for keeping track of the time the timer was started. */\n  private start: number;\n\n  /** Creates a new Timer object. */\n  constructor(time: number) {\n    this.isRunning = false;\n    this.time = time;\n    this.duration = 0;\n    this.last = 0;\n    this.start = 0;\n  }\n\n  /** @return True if the timer is running. Otherwise false. */\n  public getIsRunning() {\n    return this.isRunning;\n  }\n\n  /**\n   * True when the timer is running. False when it is not.\n   * @param running Whether or not the timer should be considered running.\n   */\n  public setIsRunning(running: boolean) {\n    this.isRunning = running;\n  }\n\n  /** @return The time, in seconds, on the timer. */\n  public getTime() {\n    return this.time;\n  }\n\n  /**\n   * Sets the time, in seconds, on the timer.\n   * @param seconds The time in seconds.\n   */\n  public setTime(seconds: number) {\n    this.time = seconds; \n  }\n\n  /** @return The duration of the timer in seconds. */\n  public getDuration() {\n    return this.duration;\n  }\n\n  /**\n   * Sets the duration of the timer in seconds. Note, duration is a convience\n   * variable and setting it will not change the time on the timer.\n   * @param seconds \n   */\n  public setDuration(seconds: number) {\n    this.duration = seconds;\n  }\n\n  /** @return The time the timer last ticked down. */\n  public getLast() {\n    return this.last;\n  }\n\n  /** Stores the value of Date.now() in the last variable. */\n  public setLast() {\n    this.last = Date.now();\n  }\n\n  /** @return Returns the time the timer started at. */\n  public getStart() {\n    return this.start;\n  }\n\n  /** Stores the value of Date.now() in the start variable. */\n  public setStart() {\n    this.start = Date.now();\n  }\n\n  /** @return The time in milliseconds since last was last set. */\n  public getLastDelta() {\n    return Date.now() - this.last;\n  }\n\n  /** @return The time in milliseconds since the timer was started. */\n  public getStartDelta() {\n    return Date.now() - this.start;\n  }\n\n}\n\n/**\n * The TimerService object provides the functionality to set, start, stop,\n * and reset a timer.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n  /** A Timer object. */\n  private timer: Timer;\n\n  /** The interval that ticks the timer down. */\n  private timerInterval: any;\n\n  /** The interval which keeps the alarm beepinmg. */\n  private alarmInterval: any;\n\n  /** The timer's alarm mp3 file. */\n  private audio = new Audio('assets/beep.mp3');\n\n\n  /**\n   * Creates a new TimerService object.\n   */\n  constructor() { \n    this.timer = new Timer(0);\n    this.timerInterval = undefined;\n    this.alarmInterval = undefined;\n  }\n\n  /**\n   * Sets the time on the timer in hours, minutes, and seconds.\n   * @param hours The number of hours on the timer.\n   * @param minutes The number of minutes on the timer.\n   * @param seconds The number of seconds on the timer.\n   */\n  public setTimer(hours: number, minutes: number, seconds: number) {\n    var time = this.convertHoursToSeconds(hours) + this.convertMinutesToSeconds(minutes) + seconds;\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /**\n   * Sets the time on the timer in seconds.\n   * @param seconds The number of seconds on the timer.\n   */\n  public setTimerBySeconds(seconds: number) {\n    this.timer.setDuration(seconds);\n    this.timer.setTime(seconds);\n  }\n\n  /**\n   * Sets the time on the timer in minutes.\n   * @param minutes The number of minutes on the timer.\n   */\n  public setTimerByMinutes(minutes: number) {\n    var time = this.convertMinutesToSeconds(minutes);\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /**\n   * Sets the time on the timer in hours.\n   * @param hours The number of hours on the timer.\n   */\n  public setTimerByHours(hours: number) {\n    var time = this.convertHoursToSeconds(hours);\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /** @return The number of seconds remaining in the current minute. */\n  public getSecondsInMinute() {\n    return this.timer.getTime() % Timer.MAX_CLOCK_VALUE;\n  }\n\n  /** @return The number of minutes remaining in the current hours. */\n  public getMinutesInHour() {\n    return Math.floor((this.timer.getTime() / Timer.MAX_CLOCK_VALUE) % Timer.MAX_CLOCK_VALUE);\n  }\n\n  /** @return The number of hours on the timer. */\n  public getHoursOnTimer() {\n    return Math.floor((this.timer.getTime() / Timer.MAX_CLOCK_VALUE) / Timer.MAX_CLOCK_VALUE);\n  }\n\n  /** @return The number of seconds in the passed in number of minutes. */\n  public convertMinutesToSeconds(minutes: number) {\n    return minutes * Timer.MAX_CLOCK_VALUE;\n  }\n\n  /** @return The number of seconds in the passed in number of hours. */\n  public convertHoursToSeconds(hours: number) {\n    return (hours * Timer.MAX_CLOCK_VALUE) * Timer.MAX_CLOCK_VALUE;\n  }\n\n    /**\n   * Syncs the time displayed by a TimerDisplayComponent with the Timer's time.\n   * @param display A TimerDisplayComponent.\n   */\n  public syncTimerDisplay(display: TimerDisplayComponent)\n  {\n    var hours = this.getHoursOnTimer();\n    var minutes = this.getMinutesInHour();\n    var seconds = this.getSecondsInMinute();\n  \n    display.updateDisplay(hours, minutes, seconds);\n  }\n\n  /**\n   * Starts the timer and keeps the connected TimerDisplayComponent updated.\n   * @param timerDisplay The TimerDisplayComponent to show the time on.\n   */\n  public start(timerDisplay: TimerDisplayComponent) {\n\n    //If the timer is not running, then start an an interval timer\n    //which compares dates, ticks down the time, and syncs the display.\n    if(!this.timer.getIsRunning()) \n    {\n\n      //Set the Timer to running.\n      this.timer.setIsRunning(true);\n\n      //Initialize the timer's start and last variable so that the correct timer time\n      //can be calculated accurately.\n      this.timer.setStart();\n      this.timer.setLast();\n\n      //Create the timer interval which holds the process of ticking down the time.\n      this.timerInterval = setInterval(() => {\n\n        //If the time since the last time the timer was set is greater than or equal to\n        //1000ms than we tick the timer.\n        if(this.timer.getLastDelta() >= 1000)\n        {\n          let passed = Math.floor(this.timer.getStartDelta() / 1000); //The time in seconds since starting the timer.\n          this.timer.setTime(this.timer.getDuration() - passed); //Sets the time on the timer to the duration of the timer minus the time passed.\n          this.syncTimerDisplay(timerDisplay); //Syncs the display with the timer.\n          this.timer.setLast(); //Updates the 'last' variable.\n        }\n        \n        //If the timer is less than or equal to zero it stops.\n        if(this.timer.getTime()  {\n          this.beep();\n        }, 1200);\n      }\n\n    } else {\n      //If the timer stopped itself by reaching zero or less we need to provide\n      //a way for the user to stop the alarm interval. This is clears the interval.\n      clearInterval(this.alarmInterval);\n      this.alarmInterval = undefined;\n\n    }\n  }\n\n  /** Plays a single alarm beep. */\n  public beep() {\n    this.audio.play();\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerButtonComponent.html":{"url":"components/TimerButtonComponent.html","title":"component - TimerButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timer-button/timer-button.component.ts\n\n\n    \n        Description\n    \n    \n        The TimerButtonComponenet class is a component which\nacts as a button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timer-button\n            \n\n            \n                styleUrls\n                ./timer-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./timer-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/timer-button/timer-button.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/timer-button/timer-button.component.ts:15\n                            \n                        \n                \n                    \n                        The text the button displays. \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * The TimerButtonComponenet class is a component which\n * acts as a button.\n */\n@Component({\n  selector: 'timer-button',\n  templateUrl: './timer-button.component.html',\n  styleUrls: ['./timer-button.component.css']\n})\nexport class TimerButtonComponent {\n\n  /** The text the button displays. */\n  @Input() buttonText: string;\n\n  constructor() { }\n  \n}\n\n    \n\n    \n        \n  {{ buttonText }}\n\n    \n\n    \n                \n                    ./timer-button.component.css\n                \n                :host\n{\n  display: block;\n\n  font-size: 2em;\n  font-weight: 700;\n  text-align: center;\n\n  height: 50px;\n\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\n\n.wrapper\n{\n  border-radius: 20px;\n  border: 3px solid #000; \n  padding: 10px;\n  background-color: #fff;\n}\n\n.wrapper:hover\n{\n  background-color: #eaeaea;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ buttonText }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TimerButtonComponent', 'selector': 'timer-button'},{'name': 'TimerComponent', 'selector': 'timer'},{'name': 'TimerDisplayComponent', 'selector': 'timer-display'},{'name': 'TimerInputComponent', 'selector': 'timer-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerComponent.html":{"url":"components/TimerComponent.html","title":"component - TimerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timer/timer.component.ts\n\n\n    \n        Description\n    \n    \n        The TimerComponent class is a component which represents a pomodoro \nproductivity timer. Each TimerComponent has a TimerDisplay, as well\nas several buttons which are responsible for setting the internal timer\non the timer.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timer\n            \n\n            \n                styleUrls\n                ./timer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./timer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                timerDisplay\n                            \n                            \n                                timerInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setTimerForCustom\n                            \n                            \n                                setTimerForLongBreak\n                            \n                            \n                                setTimerForPomodoro\n                            \n                            \n                                setTimerForShortBreak\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer/timer.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                        TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTimerForCustom\n                        \n                        \n                    \n                \n            \n            \n                \nsetTimerForCustom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTimerForLongBreak\n                        \n                        \n                    \n                \n            \n            \n                \nsetTimerForLongBreak()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:49\n                \n            \n\n\n            \n                \n                    Sets the timer for a long break (15 minutes). \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTimerForPomodoro\n                        \n                        \n                    \n                \n            \n            \n                \nsetTimerForPomodoro()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:42\n                \n            \n\n\n            \n                \n                    Sets the timer for one pomodoro (25 minutes). \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTimerForShortBreak\n                        \n                        \n                    \n                \n            \n            \n                \nsetTimerForShortBreak()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:56\n                \n            \n\n\n            \n                \n                    Sets the timer for a short break (5 minutes). \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            start\n                        \n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:32\n                \n            \n\n\n            \n                \n                    Starts the timer. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:37\n                \n            \n\n\n            \n                \n                    Stops the timer. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimerDisplayComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(TimerDisplayComponent, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:20\n                            \n                        \n\n                \n                    \n                        A reference to the TimerDisplayComponent object attached to this timer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimerInputComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(TimerInputComponent, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ViewChildren, QueryList } from \"@angular/core\";\nimport { TimerDisplayComponent } from '../timer-display/timer-display.component';\nimport { TimerService } from '../timer.service';\nimport { TimerInputComponent } from '../timer-input/timer-input.component';\n\n/**\n * The TimerComponent class is a component which represents a pomodoro \n * productivity timer. Each TimerComponent has a TimerDisplay, as well\n * as several buttons which are responsible for setting the internal timer\n * on the timer.\n */\n@Component({\n  selector: 'timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n\n  /** A reference to the TimerDisplayComponent object attached to this timer. */\n  @ViewChild(TimerDisplayComponent, {static: true}) timerDisplay: TimerDisplayComponent;\n\n  @ViewChild(TimerInputComponent, {static: true}) timerInput: TimerInputComponent;\n\n  constructor(private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.timerService.setTimerBySeconds(25);\n    this.timerService.syncTimerDisplay(this.timerDisplay);\n  }\n  \n  /** Starts the timer. */\n  start() {\n    this.timerService.start(this.timerDisplay);\n  }\n\n  /** Stops the timer. */\n  stop() {\n    this.timerService.stop(this.timerDisplay);\n  }\n\n  /** Sets the timer for one pomodoro (25 minutes). */\n  setTimerForPomodoro() {\n    this.stop()\n    this.timerService.setTimerByMinutes(25);\n    this.timerService.syncTimerDisplay(this.timerDisplay);\n  }\n\n  /** Sets the timer for a long break (15 minutes). */\n  setTimerForLongBreak() {\n    this.stop()\n    this.timerService.setTimerByMinutes(15);\n    this.timerService.syncTimerDisplay(this.timerDisplay);\n  }\n\n  /** Sets the timer for a short break (5 minutes). */\n  setTimerForShortBreak() {\n    this.stop()\n    this.timerService.setTimerByMinutes(5);\n    this.timerService.syncTimerDisplay(this.timerDisplay);\n  }\n\n  setTimerForCustom() {\n    this.stop();\n\n    var customTime = this.timerInput.customTime;\n\n    var hours = Math.floor(customTime / 60);\n    var minutes = Math.floor(customTime % 60);\n\n    this.timerService.setTimer(hours, minutes, 0);\n    this.timerService.syncTimerDisplay(this.timerDisplay);\n  }\n\n}\n    \n\n    \n        \n  \n    \n  \n\n\n\n  \n  \n\n\n\n  \n  \n  \n\n\n\n  \n    \n  \n\n    \n\n    \n                \n                    ./timer.component.css\n                \n                :host\n{\n  display: block;\n  margin-top: 15%;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TimerButtonComponent', 'selector': 'timer-button'},{'name': 'TimerComponent', 'selector': 'timer'},{'name': 'TimerDisplayComponent', 'selector': 'timer-display'},{'name': 'TimerInputComponent', 'selector': 'timer-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimerDisplay.html":{"url":"classes/TimerDisplay.html","title":"class - TimerDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimerDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/timer-display.service.ts\n        \n\n            \n                Description\n            \n            \n                The TimerDisplay class represents a model of a digital timer display.\nThe TimerDisplay can track time in the more of hours, minutes, and seconds.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hours\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_CLOCK_VALUE\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_CLOCK_VALUE\n                            \n                            \n                                    Private\n                                minutes\n                            \n                            \n                                    Private\n                                seconds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHours\n                            \n                            \n                                    Public\n                                getMinutes\n                            \n                            \n                                    Public\n                                getSeconds\n                            \n                            \n                                    Public\n                                setHours\n                            \n                            \n                                    Public\n                                setMinutes\n                            \n                            \n                                    Public\n                                setSeconds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hours: number, minutes: number, seconds: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer-display.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates a new TimerDisplay object.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        hours\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The number of hours to display on the timer.\n\n                                                        \n                                                \n                                                \n                                                        minutes\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The number of minutes to display on the timer.\n\n                                                        \n                                                \n                                                \n                                                        seconds\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The number of seconds to display on the timer.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hours\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:17\n                            \n                        \n\n                \n                    \n                        The number of hours on the timer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MAX_CLOCK_VALUE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:11\n                            \n                        \n\n                \n                    \n                        The maximum value for minutes and seconds. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MIN_CLOCK_VALUE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:14\n                            \n                        \n\n                \n                    \n                        The minimum value for hours, minutes, and seconds. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:20\n                            \n                        \n\n                \n                    \n                        The number of minutes on the timer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            seconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:23\n                            \n                        \n\n                \n                    \n                        The number of seconds on the timer. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHours\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHours()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of hours that will be displayed on the timer. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMinutes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinutes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of minutes that will be displayed on the timer. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeconds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of seconds that will be display on the timer. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHours\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHours(hours: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of hours to display on the timer. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMinutes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMinutes(minutes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of minutes to display on the timer. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSeconds(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of seconds to display on the timer. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Timer } from '../app/timer.service';\n\n/**\n * The TimerDisplay class represents a model of a digital timer display.\n * The TimerDisplay can track time in the more of hours, minutes, and seconds.\n */\nclass TimerDisplay {\n\n  /** The maximum value for minutes and seconds. */\n  public static readonly MAX_CLOCK_VALUE = 60;\n\n  /** The minimum value for hours, minutes, and seconds. */\n  public static readonly MIN_CLOCK_VALUE = 0;\n\n  /** The number of hours on the timer. */\n  private hours: number;\n\n  /** The number of minutes on the timer. */\n  private minutes: number;\n\n  /** The number of seconds on the timer. */\n  private seconds: number;\n\n  /**\n   * Creates a new TimerDisplay object.\n   * @param hours The number of hours to display on the timer.\n   * @param minutes The number of minutes to display on the timer.\n   * @param seconds The number of seconds to display on the timer.\n   */\n  constructor(hours: number, minutes: number, seconds: number) {\n    this.setHours(hours);\n    this.setMinutes(minutes);\n    this.setSeconds(seconds);\n  }\n\n  /** @return The number of hours that will be displayed on the timer. */\n  public getHours() {\n    return this.hours;\n  }\n\n  /** @return The number of minutes that will be displayed on the timer. */\n  public getMinutes() {\n    return this.minutes;\n  }\n\n  /** @return The number of seconds that will be display on the timer. */\n  public getSeconds() {\n    return this.seconds;\n  }\n\n  /** @param hours The number of hours to display on the timer. */\n  public setHours(hours: number) {\n    if(hours  TimerDisplay.MAX_CLOCK_VALUE) {\n      this.minutes = TimerDisplay.MAX_CLOCK_VALUE;\n\n    } else if(minutes  TimerDisplay.MAX_CLOCK_VALUE) {\n      this.seconds = TimerDisplay.MAX_CLOCK_VALUE;\n\n    }\n    else if(seconds  0) {\n      return String(\"0\" + minutes + \":\");\n\n    } else {\n      return String(minutes + \":\");\n    }\n  }\n\n  /** @return A formatted string representing the seconds stored in the timer display. */\n  private getSecondsString() {\n    var seconds = this.display.getSeconds()\n\n    // If the time is less than or equal to 9 seconds we add a leading 0 for display purposes.\n    if(seconds \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerDisplayComponent.html":{"url":"components/TimerDisplayComponent.html","title":"component - TimerDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timer-display/timer-display.component.ts\n\n\n    \n        Description\n    \n    \n        The TimerDisplayComponent is used to how a time in hours, minutes, and seconds\non the screen.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timer-display\n            \n\n            \n                styleUrls\n                ./timer-display.component.css\n            \n\n\n\n            \n                templateUrl\n                ./timer-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateDisplay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timerDisplayService: TimerDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer-display/timer-display.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timerDisplayService\n                                                  \n                                                        \n                                                                        TimerDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateDisplay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDisplay(hours: number, minutes: number, seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display/timer-display.component.ts:26\n                \n            \n\n\n            \n                \n                    Updates the display with the time passed in hours, minutes, and seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of hours to show on the display.\n\n                                    \n                                \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of minutes to show on the display.\n\n                                    \n                                \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of seconds to show on the display.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display/timer-display.component.ts:16\n                            \n                        \n\n                \n                    \n                        The string that holds the timer display's time. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { TimerDisplayService } from '../timer-display.service';\n\n/**\n * The TimerDisplayComponent is used to how a time in hours, minutes, and seconds\n * on the screen.\n */\n@Component({\n  selector: 'timer-display',\n  templateUrl: './timer-display.component.html',\n  styleUrls: ['./timer-display.component.css']\n})\nexport class TimerDisplayComponent {\n\n  /** The string that holds the timer display's time. */\n  display: string;\n\n  constructor(private timerDisplayService: TimerDisplayService) { }\n\n  /**\n   * Updates the display with the time passed in hours, minutes, and seconds\n   * @param hours The number of hours to show on the display.\n   * @param minutes The number of minutes to show on the display.\n   * @param seconds The number of seconds to show on the display.\n   */\n  public updateDisplay(hours: number, minutes: number, seconds: number) {\n    this.timerDisplayService.setDisplayTime(hours, minutes, seconds);\n    this.display = this.timerDisplayService.getDisplayString();\n  }\n\n}\n\n    \n\n    \n        {{ display }}\n\n    \n\n    \n                \n                    ./timer-display.component.css\n                \n                :host\n{\n  display: block;\n  color: #fff;\n\n  -webkit-text-stroke-width: 3px;\n  -webkit-text-stroke-color: black;\n\n  font-size: 10em;\n  text-align: center;  \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ display }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TimerButtonComponent', 'selector': 'timer-button'},{'name': 'TimerComponent', 'selector': 'timer'},{'name': 'TimerDisplayComponent', 'selector': 'timer-display'},{'name': 'TimerInputComponent', 'selector': 'timer-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerDisplayService.html":{"url":"injectables/TimerDisplayService.html","title":"injectable - TimerDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/timer-display.service.ts\n        \n\n            \n                Description\n            \n            \n                The TimerDisplayService class provides the functionality needed to\nrepresent time in hours, minutes, and seconds on a TimerDisplayComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDisplayString\n                            \n                            \n                                    Private\n                                getHoursString\n                            \n                            \n                                    Private\n                                getMinutesString\n                            \n                            \n                                    Private\n                                getSecondsString\n                            \n                            \n                                    Public\n                                setDisplayTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/timer-display.service.ts:101\n                            \n                        \n\n                \n                    \n                            Creates a new TimerDisplayService object.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDisplayString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDisplayString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A string formatted in the style of HH:MM:SS which represents the\ntime stored in the timer display.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getHoursString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHoursString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A formatted string representing the hours stored in the timer display. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMinutesString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinutesString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A formatted string representing the minutes stored in the timer display. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSecondsString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSecondsString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        A formatted string representing the seconds stored in the timer display. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisplayTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisplayTime(hours: number, minutes: number, seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-display.service.ts:116\n                \n            \n\n\n            \n                \n                    Sets the time to be displayed on the timer display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of hours to display.\n\n                                    \n                                \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of minutes to display.\n\n                                    \n                                \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of seconds to display.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimerDisplay\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-display.service.ts:101\n                            \n                        \n\n                \n                    \n                        A TimerDisplay object which holds time in the form of hours, minutes, and seconds. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Timer } from '../app/timer.service';\n\n/**\n * The TimerDisplay class represents a model of a digital timer display.\n * The TimerDisplay can track time in the more of hours, minutes, and seconds.\n */\nclass TimerDisplay {\n\n  /** The maximum value for minutes and seconds. */\n  public static readonly MAX_CLOCK_VALUE = 60;\n\n  /** The minimum value for hours, minutes, and seconds. */\n  public static readonly MIN_CLOCK_VALUE = 0;\n\n  /** The number of hours on the timer. */\n  private hours: number;\n\n  /** The number of minutes on the timer. */\n  private minutes: number;\n\n  /** The number of seconds on the timer. */\n  private seconds: number;\n\n  /**\n   * Creates a new TimerDisplay object.\n   * @param hours The number of hours to display on the timer.\n   * @param minutes The number of minutes to display on the timer.\n   * @param seconds The number of seconds to display on the timer.\n   */\n  constructor(hours: number, minutes: number, seconds: number) {\n    this.setHours(hours);\n    this.setMinutes(minutes);\n    this.setSeconds(seconds);\n  }\n\n  /** @return The number of hours that will be displayed on the timer. */\n  public getHours() {\n    return this.hours;\n  }\n\n  /** @return The number of minutes that will be displayed on the timer. */\n  public getMinutes() {\n    return this.minutes;\n  }\n\n  /** @return The number of seconds that will be display on the timer. */\n  public getSeconds() {\n    return this.seconds;\n  }\n\n  /** @param hours The number of hours to display on the timer. */\n  public setHours(hours: number) {\n    if(hours  TimerDisplay.MAX_CLOCK_VALUE) {\n      this.minutes = TimerDisplay.MAX_CLOCK_VALUE;\n\n    } else if(minutes  TimerDisplay.MAX_CLOCK_VALUE) {\n      this.seconds = TimerDisplay.MAX_CLOCK_VALUE;\n\n    }\n    else if(seconds  0) {\n      return String(\"0\" + minutes + \":\");\n\n    } else {\n      return String(minutes + \":\");\n    }\n  }\n\n  /** @return A formatted string representing the seconds stored in the timer display. */\n  private getSecondsString() {\n    var seconds = this.display.getSeconds()\n\n    // If the time is less than or equal to 9 seconds we add a leading 0 for display purposes.\n    if(seconds \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerInputComponent.html":{"url":"components/TimerInputComponent.html","title":"component - TimerInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timer-input/timer-input.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timer-input\n            \n\n            \n                styleUrls\n                ./timer-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./timer-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                customTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitCustomTime\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                customTimeSubmitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/timer-input/timer-input.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        customTimeSubmitted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/timer-input/timer-input.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitCustomTime\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitCustomTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer-input/timer-input.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer-input/timer-input.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'timer-input',\n  templateUrl: './timer-input.component.html',\n  styleUrls: ['./timer-input.component.css']\n})\nexport class TimerInputComponent {\n\n  customTime: number;\n\n  @Output() customTimeSubmitted: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  submitCustomTime() {\n    if(!isNaN(this.customTime)) {\n      this.customTimeSubmitted.emit(this.customTime);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./timer-input.component.css\n                \n                input\n{\n  border-radius: 20px;\n  border: 3px solid #000;\n\n  font-size: 2em;\n  font-weight: 700;\n\n  text-align: center;\n\n  width: 100%;\n  height: 50px;\n\n  margin-top: 23px;\n}\n\ninput:focus\n{\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TimerButtonComponent', 'selector': 'timer-button'},{'name': 'TimerComponent', 'selector': 'timer'},{'name': 'TimerDisplayComponent', 'selector': 'timer-display'},{'name': 'TimerInputComponent', 'selector': 'timer-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerService.html":{"url":"injectables/TimerService.html","title":"injectable - TimerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/timer.service.ts\n        \n\n            \n                Description\n            \n            \n                The TimerService object provides the functionality to set, start, stop,\nand reset a timer.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alarmInterval\n                            \n                            \n                                    Private\n                                audio\n                            \n                            \n                                    Private\n                                timer\n                            \n                            \n                                    Private\n                                timerInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                beep\n                            \n                            \n                                    Public\n                                convertHoursToSeconds\n                            \n                            \n                                    Public\n                                convertMinutesToSeconds\n                            \n                            \n                                    Public\n                                getHoursOnTimer\n                            \n                            \n                                    Public\n                                getMinutesInHour\n                            \n                            \n                                    Public\n                                getSecondsInMinute\n                            \n                            \n                                    Public\n                                setTimer\n                            \n                            \n                                    Public\n                                setTimerByHours\n                            \n                            \n                                    Public\n                                setTimerByMinutes\n                            \n                            \n                                    Public\n                                setTimerBySeconds\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                            \n                                    Public\n                                syncTimerDisplay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/timer.service.ts:135\n                            \n                        \n\n                \n                    \n                            Creates a new TimerService object.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            beep\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beep()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:300\n                \n            \n\n\n            \n                \n                    Plays a single alarm beep. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertHoursToSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertHoursToSeconds(hours: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of seconds in the passed in number of hours. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertMinutesToSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertMinutesToSeconds(minutes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of seconds in the passed in number of minutes. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHoursOnTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHoursOnTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The number of hours on the timer. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMinutesInHour\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinutesInHour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The number of minutes remaining in the current hours. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSecondsInMinute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSecondsInMinute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of seconds remaining in the current minute. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimer(hours: number, minutes: number, seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:153\n                \n            \n\n\n            \n                \n                    Sets the time on the timer in hours, minutes, and seconds.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of hours on the timer.\n\n                                    \n                                \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of minutes on the timer.\n\n                                    \n                                \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of seconds on the timer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimerByHours\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimerByHours(hours: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:182\n                \n            \n\n\n            \n                \n                    Sets the time on the timer in hours.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hours\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of hours on the timer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimerByMinutes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimerByMinutes(minutes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:172\n                \n            \n\n\n            \n                \n                    Sets the time on the timer in minutes.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    minutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of minutes on the timer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimerBySeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimerBySeconds(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:163\n                \n            \n\n\n            \n                \n                    Sets the time on the timer in seconds.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of seconds on the timer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start(timerDisplay: TimerDisplayComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:230\n                \n            \n\n\n            \n                \n                    Starts the timer and keeps the connected TimerDisplayComponent updated.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    timerDisplay\n                                    \n                                                TimerDisplayComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The TimerDisplayComponent to show the time on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop(timerDisplay: TimerDisplayComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:272\n                \n            \n\n\n            \n                \n                    Stops the timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    timerDisplay\n                                    \n                                                TimerDisplayComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The TimerDisplayComponent to clear the time from.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            syncTimerDisplay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncTimerDisplay(display: TimerDisplayComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer.service.ts:217\n                \n            \n\n\n            \n                \n                    Syncs the time displayed by a TimerDisplayComponent with the Timer's time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    display\n                                    \n                                                TimerDisplayComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A TimerDisplayComponent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:132\n                            \n                        \n\n                \n                    \n                        The interval which keeps the alarm beepinmg. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            audio\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Audio('assets/beep.mp3')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:135\n                            \n                        \n\n                \n                    \n                        The timer's alarm mp3 file. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Timer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:126\n                            \n                        \n\n                \n                    \n                        A Timer object. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timerInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer.service.ts:129\n                            \n                        \n\n                \n                    \n                        The interval that ticks the timer down. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TimerDisplayComponent } from './timer-display/timer-display.component';\nimport { interval } from 'rxjs';\n\n/**\n * The Timer class represents a model of a digital timer. A timer is able to\n * keep track of time in seconds. Additionally, a timer provides come convience\n * variables for tracking the the duration the timer is suppose to run, whether\n * or not the timer is or isn't running, the time the timer was started, and the\n * time the timer last ticked down.\n */\nexport class Timer {\n\n  /** The maximum value for minutes and seconds. */\n  public static readonly MAX_CLOCK_VALUE = 60;\n\n  /** The minimum value for hours, minutes, and seconds. */\n  public static readonly MIN_CLOCK_VALUE = 0;\n\n  /** Whether or not the timer is running. */\n  private isRunning: boolean;\n\n  /** The time in seconds. */\n  private time: number;\n\n  /** A convience variable for keeping track of the amount of time the timer is suppose to run. */\n  private duration: number;\n\n  /** A convience variable for keeping track of the last time something was done. */\n  private last: number;\n\n  /** A convience variable for keeping track of the time the timer was started. */\n  private start: number;\n\n  /** Creates a new Timer object. */\n  constructor(time: number) {\n    this.isRunning = false;\n    this.time = time;\n    this.duration = 0;\n    this.last = 0;\n    this.start = 0;\n  }\n\n  /** @return True if the timer is running. Otherwise false. */\n  public getIsRunning() {\n    return this.isRunning;\n  }\n\n  /**\n   * True when the timer is running. False when it is not.\n   * @param running Whether or not the timer should be considered running.\n   */\n  public setIsRunning(running: boolean) {\n    this.isRunning = running;\n  }\n\n  /** @return The time, in seconds, on the timer. */\n  public getTime() {\n    return this.time;\n  }\n\n  /**\n   * Sets the time, in seconds, on the timer.\n   * @param seconds The time in seconds.\n   */\n  public setTime(seconds: number) {\n    this.time = seconds; \n  }\n\n  /** @return The duration of the timer in seconds. */\n  public getDuration() {\n    return this.duration;\n  }\n\n  /**\n   * Sets the duration of the timer in seconds. Note, duration is a convience\n   * variable and setting it will not change the time on the timer.\n   * @param seconds \n   */\n  public setDuration(seconds: number) {\n    this.duration = seconds;\n  }\n\n  /** @return The time the timer last ticked down. */\n  public getLast() {\n    return this.last;\n  }\n\n  /** Stores the value of Date.now() in the last variable. */\n  public setLast() {\n    this.last = Date.now();\n  }\n\n  /** @return Returns the time the timer started at. */\n  public getStart() {\n    return this.start;\n  }\n\n  /** Stores the value of Date.now() in the start variable. */\n  public setStart() {\n    this.start = Date.now();\n  }\n\n  /** @return The time in milliseconds since last was last set. */\n  public getLastDelta() {\n    return Date.now() - this.last;\n  }\n\n  /** @return The time in milliseconds since the timer was started. */\n  public getStartDelta() {\n    return Date.now() - this.start;\n  }\n\n}\n\n/**\n * The TimerService object provides the functionality to set, start, stop,\n * and reset a timer.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n  /** A Timer object. */\n  private timer: Timer;\n\n  /** The interval that ticks the timer down. */\n  private timerInterval: any;\n\n  /** The interval which keeps the alarm beepinmg. */\n  private alarmInterval: any;\n\n  /** The timer's alarm mp3 file. */\n  private audio = new Audio('assets/beep.mp3');\n\n\n  /**\n   * Creates a new TimerService object.\n   */\n  constructor() { \n    this.timer = new Timer(0);\n    this.timerInterval = undefined;\n    this.alarmInterval = undefined;\n  }\n\n  /**\n   * Sets the time on the timer in hours, minutes, and seconds.\n   * @param hours The number of hours on the timer.\n   * @param minutes The number of minutes on the timer.\n   * @param seconds The number of seconds on the timer.\n   */\n  public setTimer(hours: number, minutes: number, seconds: number) {\n    var time = this.convertHoursToSeconds(hours) + this.convertMinutesToSeconds(minutes) + seconds;\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /**\n   * Sets the time on the timer in seconds.\n   * @param seconds The number of seconds on the timer.\n   */\n  public setTimerBySeconds(seconds: number) {\n    this.timer.setDuration(seconds);\n    this.timer.setTime(seconds);\n  }\n\n  /**\n   * Sets the time on the timer in minutes.\n   * @param minutes The number of minutes on the timer.\n   */\n  public setTimerByMinutes(minutes: number) {\n    var time = this.convertMinutesToSeconds(minutes);\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /**\n   * Sets the time on the timer in hours.\n   * @param hours The number of hours on the timer.\n   */\n  public setTimerByHours(hours: number) {\n    var time = this.convertHoursToSeconds(hours);\n    this.timer.setDuration(time);\n    this.timer.setTime(time);\n  }\n\n  /** @return The number of seconds remaining in the current minute. */\n  public getSecondsInMinute() {\n    return this.timer.getTime() % Timer.MAX_CLOCK_VALUE;\n  }\n\n  /** @return The number of minutes remaining in the current hours. */\n  public getMinutesInHour() {\n    return Math.floor((this.timer.getTime() / Timer.MAX_CLOCK_VALUE) % Timer.MAX_CLOCK_VALUE);\n  }\n\n  /** @return The number of hours on the timer. */\n  public getHoursOnTimer() {\n    return Math.floor((this.timer.getTime() / Timer.MAX_CLOCK_VALUE) / Timer.MAX_CLOCK_VALUE);\n  }\n\n  /** @return The number of seconds in the passed in number of minutes. */\n  public convertMinutesToSeconds(minutes: number) {\n    return minutes * Timer.MAX_CLOCK_VALUE;\n  }\n\n  /** @return The number of seconds in the passed in number of hours. */\n  public convertHoursToSeconds(hours: number) {\n    return (hours * Timer.MAX_CLOCK_VALUE) * Timer.MAX_CLOCK_VALUE;\n  }\n\n    /**\n   * Syncs the time displayed by a TimerDisplayComponent with the Timer's time.\n   * @param display A TimerDisplayComponent.\n   */\n  public syncTimerDisplay(display: TimerDisplayComponent)\n  {\n    var hours = this.getHoursOnTimer();\n    var minutes = this.getMinutesInHour();\n    var seconds = this.getSecondsInMinute();\n  \n    display.updateDisplay(hours, minutes, seconds);\n  }\n\n  /**\n   * Starts the timer and keeps the connected TimerDisplayComponent updated.\n   * @param timerDisplay The TimerDisplayComponent to show the time on.\n   */\n  public start(timerDisplay: TimerDisplayComponent) {\n\n    //If the timer is not running, then start an an interval timer\n    //which compares dates, ticks down the time, and syncs the display.\n    if(!this.timer.getIsRunning()) \n    {\n\n      //Set the Timer to running.\n      this.timer.setIsRunning(true);\n\n      //Initialize the timer's start and last variable so that the correct timer time\n      //can be calculated accurately.\n      this.timer.setStart();\n      this.timer.setLast();\n\n      //Create the timer interval which holds the process of ticking down the time.\n      this.timerInterval = setInterval(() => {\n\n        //If the time since the last time the timer was set is greater than or equal to\n        //1000ms than we tick the timer.\n        if(this.timer.getLastDelta() >= 1000)\n        {\n          let passed = Math.floor(this.timer.getStartDelta() / 1000); //The time in seconds since starting the timer.\n          this.timer.setTime(this.timer.getDuration() - passed); //Sets the time on the timer to the duration of the timer minus the time passed.\n          this.syncTimerDisplay(timerDisplay); //Syncs the display with the timer.\n          this.timer.setLast(); //Updates the 'last' variable.\n        }\n        \n        //If the timer is less than or equal to zero it stops.\n        if(this.timer.getTime()  {\n          this.beep();\n        }, 1200);\n      }\n\n    } else {\n      //If the timer stopped itself by reaching zero or less we need to provide\n      //a way for the user to stop the alarm interval. This is clears the interval.\n      clearInterval(this.alarmInterval);\n      this.alarmInterval = undefined;\n\n    }\n  }\n\n  /** Plays a single alarm beep. */\n  public beep() {\n    this.audio.play();\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/timer-button/timer-button.component.ts\n            \n            component\n            TimerButtonComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/timer-display.service.ts\n            \n            class\n            TimerDisplay\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/app/timer-display.service.ts\n            \n            injectable\n            TimerDisplayService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/timer-display/timer-display.component.ts\n            \n            component\n            TimerDisplayComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/timer-input/timer-input.component.ts\n            \n            component\n            TimerInputComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/timer.service.ts\n            \n            class\n            Timer\n            \n                66 %\n                (14/21)\n            \n        \n        \n            \n                \n                src/app/timer.service.ts\n            \n            injectable\n            TimerService\n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                src/app/timer/timer.component.ts\n            \n            component\n            TimerComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.0.1\n        \n            @angular/common : ~8.0.1\n        \n            @angular/compiler : ~8.0.1\n        \n            @angular/core : ~8.0.1\n        \n            @angular/forms : ~8.0.1\n        \n            @angular/platform-browser : ~8.0.1\n        \n            @angular/platform-browser-dynamic : ~8.0.1\n        \n            @angular/router : ~8.0.1\n        \n            bootstrap : ^4.3.1\n        \n            jquery : ^3.4.1\n        \n            popper.js : ^1.15.0\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nPomodoroWeb\nThis project was generated with Angular CLI version 8.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\npomodoro-web\n\n\n\n\n\n\n\nb2a5aa9021244070bbefa6f4fcfce6fd98e99c03\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nTimerButtonComponent\n\nTimerButtonComponent\n\nAppModule -->\n\nTimerButtonComponent->AppModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nAppModule -->\n\nTimerComponent->AppModule\n\n\n\n\n\nTimerDisplayComponent\n\nTimerDisplayComponent\n\nAppModule -->\n\nTimerDisplayComponent->AppModule\n\n\n\n\n\nTimerInputComponent\n\nTimerInputComponent\n\nAppModule -->\n\nTimerInputComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
